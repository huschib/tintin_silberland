#NOP { /**
 *	@brief	bot sequencer
 *
 *  Sequenz erstellen, die mit Wartezeiten zwischen den Schritten ausgef체hrt
 *  werden kann.
 */};

#CLASS barden_buffen KILL
#CLASS barden_buffen OPEN

#ECHO {<029>-- <188>%s<288> geladen<099>} {gilden/barden_buffen.tin}

#ALIAS {bb} {
    #IF { "$buff[modus]" == "blocked" } {
        #ECHO {<F797>Buffanfragen werden jetzt nicht mehr geblockt.<099>};
        buff_modus
    };
    #ELSE {
        #ECHO {<F977>Buffanfragen werden ab jetzt abgeblockt.<099>};
        buff_modus blocked
    };
    #IF { $screen[panels] == 3 } {
        set_toggle_button
    }
}

#VAR bot_stack {};
#VAR bot_prefix {bot_stack};
#VAR bot_step {1};
#VAR kampfmodus 0;

#NOP { /**
 *	@brief	Mitteile Trigger
 */};

#ACTION {^%+1..w teilt Dir mit: info!}
{
    #IF { "$buff[modus]" != "" ||
            "%1" != "{$friends}"} {
        #NOP Meldung ausgeben?;
        #RETURN
    };
    #SEND {teile %1 mit buffe|halt|hymne|rep mich!};
} {5};

#ACTION {^%+1..w teilt Dir mit: buffe mich!} {
    #IF { "$buff[modus]" == "{blocked|gespenst}" } {
        #NOP Meldung ausgeben?;
        #RETURN
    };

    #IF { "%1" != "Naneth" } {
        buff_insert buff %1 {$buff_schild_lor}
    };
    #ELSE {
        buff_insert buff %1 {$buff_schild}
    };
}

#ACTION {^%+1..w teilt Dir mit: hymne mich!} {
    #IF { "$buff[modus]" == "{blocked|gespenst}" ||
            "%1" != "{$friends}"} {
        #NOP Meldung ausgeben?;
        #RETURN
    };

    buff_insert hymne %1 {$buff_hymne};
}

#ACTION {^%+1..w teilt Dir mit: rep mich!} {
    #IF { "$buff[modus]" == "{blocked|gespenst}" } {
        #NOP Meldung ausgeben?;
        #RETURN
    };

    buff_insert repair %1 {$buff_repair}
}

#ACTION {^%+1..w teilt Dir mit: helde mich!} {
    #IF { "$buff[modus]" == "{blocked|gespenst}" } {
        #NOP Meldung ausgeben?;
        #RETURN
    };

    buff_insert held %1 {$buff_held}
}

#ACTION {^%+1..w teilt Dir mit: gespensterzeit!} {
    #IF { "$buff[modus]" == "blocked" ||
            "%1" != "{$friends}"} {
        #NOP Meldung ausgeben?;
        #RETURN
    };

    #IF { "$buff[modus]" == "gespenst" } {
        tick_start;
        #RETURN
    };
    buff_insert gespenst %1 {$bot_gespenst};
}

#ACTION {^%+1..w teilt Dir mit: halt mich!} {
    #IF { "$buff[modus]" == "{|gespenst|buff}" && &bot_stack[] != 0 && "%1" == "{$friends}" } {
        beende;
        tick_kill;
        buff_insert halt %1 {$bot_halt};
    };
} {5};

#NOP { /**
 *	@brief	Golem nachschauen
 */};

#ACTION {^{Fenris|Baldur} teilt Dir mit: golem?$} {
    #IF { "$buff[modus]" == "blocked" ||
            $vnum != 5052} {
        #NOP Meldung ausgeben?;
        #RETURN
    };
    buff_insert golem %1 {$bot_golem};
}

#ALIAS {bot_golem_1} {
    #LINE ONESHOT {
        #ACTION {Ein Lehmgolem.} {
            #VAR lehmgolem 1;
        }
    }
} {5};

#ALIAS {bot_golem_2} {
    #IF {$lehmgolem == 1} {
        debug_msg {'$bot_target' golem};
        #SEND {tm $bot_target jupp, Golem ist da!};
        #VAR lehmgolem 0;
    }
} {5};

#NOP { /**
 *	@brief	Extra-Alis f체r Lieder
 */};

#ALIAS {schild} {
    ahn $bot_target
} {5};

#ALIAS {lorica} {
    lor $bot_target
} {5};

#ALIAS {heldenruf} {
    held $bot_target
} {5};

#ALIAS {bbh} {
    #FORMAT {tmp_target} {%n} {$info[SESSION][NAME]};
    #IF { "$buff[modus]" == "gespenst" } {
        buff_add hymne $tmp_target {$buff_hymne};
        #RETURN
    };
    buff_insert hymne $tmp_target {$buff_hymne}
} {5};

#ALIAS {insp_check} {
    #IF { $insp_len >= 5 } {
        tick_skip 2
    }
} {5};

#ALIAS {hymn_settitle} {
    #VAR tmp {$bot_target};
    #IF { "$bot_target" == "%i{$info[SESSION][NAME]}" } {
        #VAR tmp {sich}
    };
    #SEND {titel summt leise eine Hymne fuer $tmp}
}

#NOP { /**
 *	@brief	Kampfmodus mit Triggern f체r erneute Kampf-Lieder
 */};

#ALIAS {kampfmodus} {
    buff_modus blocked;
    #VAR kampfmodus 1;
    #ACTION {Du musst Dich erst wieder etwas sammeln!} {
        #VAR spell_pause {1};
        #TICKER {spell_pause} {
            #UNTICKER {spell_pause_check};
            r
        } {2};
        #TICKER {spell_pause_check} {
            #VAR spell_pause {0};
            #UNTICKER {spell_pause};
            #UNTICKER {spell_pause_check};
        } {3};
    };
    tal;
    r
} {5};

#ACTION {Mit finsterer Stimme rufst du: "Nimmermehr!" und deutest auf} {
    #IF { @_an_aus{kampfmodus} == 0 } {
        #RETURN
    };
    tal;
    r
} {5};

#ACTION {^Da dein Opfer nicht mehr hier ist beendest du deinen Vortrag.} {
    #CLASS spell_rabe CLEAR;
    #IF { @_an_aus{kampfmodus} == 0 } {
        #RETURN
    };
    tal;
    r
}

#ACTION {Der Lehmgolem laesst Dich nicht passieren.} {
    #PATH STOP;
    #IF { "$buff[modus]" == "{gespenst}" } {
        #MAP UNDO;
        tick_kill;
        #SWITCH {1d4} {
            #CASE {1} {
                #SEND {gem flieht vor einem Lehmgolem};
            };
            #CASE {2} {
                #SEND {gu ihr habt da was stehen lassen ...};
            };
            #CASE {3} {
                #SEND {gem schaut traurig einen Lehmgolem an};
            };
            #CASE {4} {
                #SEND {gu da steht ein Golem ...}
            }
        };
        go pfad
    }
} {5};

#ALIAS {message_restzeit} {
    #SEND {sag naechstes Zauberlied in @timer_rest{zauber}s ...}
}

#NOP { /**
 *	@brief	Abl채ufe in Variablen
 */};

#VAR {bot_halt} {
    {1} {rr jring}
    {2} {go pfad}
    {3} {rr}
}

#VAR {buff_hymne} {
    {1} {rr jring}
    {2} {insp_check}
    {3} {lied;tick_wait 10}
    {4} {lied;tick_wait 4}
    {5} {zau;tick_stop}
    {6} {tick_wait 2}
    {7} {beende hymne der hoffnung}
    {8} {hym;tick_stop}
    {9} {buff_message hym;hymn_settitle}
    {10}{tick_wait 8}
    {11}{rr}
}

#VAR {buff_schild_lor} {
    {1} {rr jring}
    {2} {insp_check}
    {3} {lied;tick_wait 10}
    {4} {lied;tick_wait 4}
    {5} {zau;tick_stop}
    {6} {tick_wait 2}
    {7} {buff_message schild}
    {8} {schild;tick_stop}
    {9} {tick_wait 2}
    {10}{buff_message lorica}
    {11}{lorica;tick_stop}
    {12}{buff_message final}
    {13}{tick_wait 2}
    {14}{rr}
}

#VAR {buff_schild} {
    {1} {rr jring}
    {2} {insp_check}
    {3} {lied;tick_wait 10}
    {4} {lied;tick_wait 4}
    {5} {zau;tick_stop}
    {6} {tick_wait 2}
    {7} {buff_message schild}
    {8} {schild;tick_stop}
    {9} {buff_message final}
    {10}{tick_wait 2}
    {11}{rr}
}

#VAR {buff_repair} {
    {1} {rr jring}
    {2} {insp_check}
    {3} {lied;tick_wait 10}
    {4} {lied;tick_wait 4}
    {5} {zau;tick_stop}
    {6} {tick_wait 2}
    {7} {buff_message repair}
    {8} {borst;tick_stop}
    {9} {tick_wait 20}
    {10}{rr}
}

#VAR {buff_held} {
    {1} {rr jring}
    {2} {insp_check}
    {3} {lied;tick_wait 10}
    {4} {lied;tick_wait 4}
    {5} {zau;tick_stop}
    {6} {tick_wait 2}
    {7} {buff_message held}
    {8} {heldenruf;tick_stop}
    {9} {tick_wait 6}
    {10}{rr}
}

#VARIABLE {bot_gespenst} {
    {1} {buff_modus gespenst}
    {2} {go barghest}
    {3} {bbh}
    {4} {buff_modus gespenst}
    {5} {bli;tick_wait 6}
    {6} {buff_message gespenst;tick_stop}
    {7} {tick_wait 2}
    {8} {go meisterschlaechter}
    {9} {kampfmodus;tick_stop}
    {10}{bee}
    {11}{go pfad}
    {12}{buff_modus}
}

#VARIABLE {bot_golem} {
    {1} {bot_golem_1;gg o}
    {2} {bot_golem_2}
}

#VARIABLE {bot_untitle} {
    {1} {#SEND {titel Rattensaenger am Pfad}}
}

#NOP { /**
 *	@brief	Bot-System basierend auf Tickern
 */};

#ALIAS {tick_start} {
    #TICKER {bot} {
        #IF { &{${bot_prefix}[$bot_step][]} > 0 } {
            debug_msg {Enter Sub-Routine};
            #VAR bot_prefix {${bot_prefix}[$bot_step]};
            #VAR bot_step 1;
        };
        ${${bot_prefix}[$bot_step]};
        #IF { $bot_step >= &{${bot_prefix}[]} } {
            #REGEXP {${bot_prefix}} {[%+1..d]$} {
                tick_next;
                #RETURN;
            } {
                debug_msg {Ende erreicht.};
                #VAR bot_step 1;
                #NOP tick_stop;
                tick_kill;
                #RETURN;
            };
        };
        tick_skip;
        #NOP #MATH {bot_step} {$bot_step + 1};
    } {1};
} {5};

#ALIAS {tick_stop} {
    #UNTICKER {bot};
} {5};

#ALIAS {tick_kill} {
    #VAR bot_stack {};
    #VAR bot_prefix {bot_stack};
    #VAR bot_step {1};
    buff_modus;
    #UNTICKER {bot};
} {5};

#ALIAS {tick_skip} {
    #IF { "%1" == "-1" } {
        #VAR bot_step {&{${bot_prefix}[]}};
    };
    #ELSEIF { "%1" != "" } {
        #MATH {bot_step} {$bot_step + %1};
    };
    #ELSE {
        #MATH {bot_step} {$bot_step + 1};
    }
} {5};

#ALIAS {tick_next} {
    debug_msg {Exit Sub-Routine.};
    #REGEXP {${bot_prefix}} {[%+1..d]$} {
        #VAR bot_step {&1};
    };
    #VAR bot_type {};
    #REPLACE {bot_prefix} {[%+1..d]$} {};
} {5};

#ALIAS {tick_wait} {
    tick_stop;
    #MATH tmp_wait {%1 - 1};
    #TICKER {wait} {
        tick_start;
        #UNTICKER {wait};
    } {$tmp_wait};
} {5};

#ALIAS {bot_target} {
    #VAR bot_target {%2};
    #IF { "$bot_target" == "" } {
        #FORMAT bot_target {%n} {$info[SESSION][NAME]}
    };
    #VAR bot_type %1;
    buff_modus buff;
    debug_msg {bot_target %1 $bot_target}
}

#NOP { /**
 *	@brief	Buff-spezifische Aliase
 */};

#ALIAS {buff_message} {
    #VAR {buff_message} {
        {hym_1}     {baeh, schwache Hymne :(}
        {hym_2}     {naja, Gehtso-Hymne :|}
        {hym_3}     {feine Hymne! :)}
        {hym}       {}
        {schild}    {, phys. Schutz kommt}
        {schild_act}{, der Schutz ist noch aktiv}
        {lorica}    {, der Spell-Schutz kommt}
        {lorica_act}{, der Schutz ist noch aktiv}
        {lorica_oth}{, ein anderer Schutz ist noch aktiv}
        {final}     {, auf geht's!}
        {fail}      {hm, na dann eben nicht}
        {repair}    {Reparatur kommt!}
        {gespenst}  {von mir aus kanns ...}
        {held}    {, Heldenlied kommt}
    };

    #VAR buff_message[hym] {$buff_message[hym_$bard[zauber]]};

    #IF { "%1" == "{hym|repair|fail|gespenst}" } {
        #SEND {emote sagt: $buff_message[%1]}
    };
    #ELSE {
        #SEND {emote sagt: $bot_target$buff_message[%1]}
    };

} {5};

#NOP { /**
 *	@todo   in buff_add umbenennen
 */};
#ALIAS {buff_insert} {
    #FOREACH {*bot_stack[]} {loop} {
        #LIST {bot_stack[$loop]} FIND {{bot_target %1 %2}} tmp_find;
        #IF { "%1" == "{hymne|repair|gespenst}" } {
            #LIST {bot_stack[$loop]} FIND {{bot_target %1.+}} tmp_find;
        };
        #IF { $tmp_find > 0 } {
            debug_msg {schon in der Schlange};
            #RETURN;
        };
    };
    #LIST bot_stack INSERT -1 {%3};
    #LIST bot_stack[-1] INSERT +1 {bot_target %1 %2};
    #IF { "$buff[modus]" == "" } {
        tick_start
    };
} {5};

#NOP { /**
 *	@todo   in buff_insert umbenennen
 */};
#ALIAS {buff_add} {
    #FOREACH {*{${bot_prefix}[]}} {loop} {
        #LIST {${bot_prefix}[$loop]} FIND {{bot_target %1 %2}} tmp_find;
        #IF { "%1" == "{hymne|repair|gespenst}" } {
            #LIST {${bot_prefix}[$loop]} FIND {{bot_target %1.+}} tmp_find;
        };
        #IF { $tmp_find > 0 } {
            debug_msg {schon in der Schlange};
            #RETURN;
        };
    };
    #MATH tmp_skip {$bot_step + 1};
    #LIST ${bot_prefix} INSERT $tmp_skip {%3};
    #LIST ${bot_prefix}[$tmp_skip] INSERT +1 {bot_target %1 %2};
    #IF { "$buff[modus]" == "{|gespenst}" } {
        tick_start
    };
} {5};

#ALIAS {buff_task} {

} {5};

#ALIAS {buff_modus} {
    #SWITCH { "%1" } {
        #CASE { "buff" } {
            #VAR buff[modus] {buff}
        };
        #CASE { "gespenst" } {
            #VAR buff[modus] {gespenst}
        };
        #CASE { "blocked" } {
            #VAR buff[modus] {blocked}
        };
        #DEFAULT {
            #VAR buff[modus] {}
        }
    };
} {5};

buff_modus
#IF { @_an_aus{config[barden_buffen]} == 0 } {
    buff_modus blocked
};

#CLASS barden_buffen CLOSE

#NOP {

#VAR {bot_stack} {
    {1}
    {
        {type}      {repair}
        {target}    {Fenris}
        {batch}
        {
            {1} {rr jring}
            {2} {insp_check}
            {3} {lied;tick_wait 10}
            {4} {lied;tick_wait 4}
            {5} {zau;tick_stop}
            {6} {tick_wait 2}
            {7} {buff_message repair}
            {8} {borst;tick_stop}
            {9} {tick_wait 20}
            {10}{rr}
        }
    }
};

#VARIABLE {bot_gespenst} {
    {1} {buff_modus gespenst}
    {2} {go barghest}
    {3} {bbh}
    {4} {buff_modus gespenst}
    {5} {bli;tick_wait 6}
    {6} {buff_message gespenst;tick_stop}
    {7} {tick_wait 2}
    {8} {go meisterschlaechter}
    {9} {kampfmodus;tick_stop}
    {10}{bee}
    {11}{go pfad}
    {12}{buff_modus}
};

#VAR {buff_hymne} {
    {1} {rr jring}
    {2} {insp_check}
    {3} {lied;tick_wait 10}
    {4} {lied;tick_wait 4}
    {5} {zau;tick_stop}
    {6} {tick_wait 2}
    {7} {beende hymne der hoffnung}
    {8} {hym;tick_stop}
    {9} {buff_message hym;hymn_settitle}
    {10}{tick_wait 8}
    {11}{rr}
};

#NOP };