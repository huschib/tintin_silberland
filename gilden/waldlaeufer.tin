#CLASS waldlaeufer KILL
#CLASS waldlaeufer OPEN

#ECHO {<029>-- <188>%s<288> geladen<099>} {gilden/waldlaeufer.tin}

#VAR color_inactive     {<g02>}
#VAR color_active       {<099>}
#VAR color_spell_ende   {<339>}
#VAR gilden_report_cmd  {wlstatus}

#HIGHLIGHT {^Du kannst wieder hoeren!} {underscore}
#HIGHLIGHT {^Du kannst wieder sehen!} {underscore}

#HIGHLIGHT {^Du hast nun die Vollendung um %+ erreicht!} {<dfc><388>}


#NOP { /**
 *	@brief	Pfade laden
 */};

#IF { @_an_aus{config[waldlaeufer_pfad1]} } {
    #READ gilden/waldlaeufer/wl_pfad_${config[waldlaeufer_pfad1]}.tin
};
#IF { @_an_aus{config[waldlaeufer_pfad2]} } {
    #READ gilden/waldlaeufer/wl_pfad_${config[waldlaeufer_pfad2]}.tin
};

#NOP { /**
 *	@brief	Statuszeile
 */};

#LIST status_items CREATE {status_session;status_hp;status_mp;status_align;status_waldlaeufer_aktiv;status_waldlaeufer_pfad;status_zustand;status_tier;status_halsband}

#ALIAS {status_var_update} {
    #VAR %1 {@{%1}{}};
    #LIST status_items FIND %1 tmp_status_index;
    #IF { $tmp_status_index > 0 } {
        #VAR statusline_list[$tmp_status_index] {${%1}};
    };
    draw_status
}

#NOP { /**
 *  @fn     status_waldlaeufer
 *  @brief  setzt Block mit aktiven Spells fuer die Statuszeile
 *
 *  @return     formatierter String
 */};

#FUNCTION {status_waldlaeufer_aktiv} {
    #IF {   @_an_aus{config[waldlaeufer_pfad1]} == 0
            && @_an_aus{config[waldlaeufer_pfad2]} == 0 } {
        #RETURN
    };
    #VAR gesamt_tmp {};
    #LIST gesamt_tmp COPY waldlaeufer_aktiv;
    #LIST gesamt_tmp INDEXATE symbol;
    #LIST gesamt_tmp COLLAPSE {};
    #FORMAT {gesamt_tmp} {%s<099>|} {$gesamt_tmp};
    #RETURN $gesamt_tmp
}

#EVENT {VARIABLE UPDATED waldlaeufer_aktiv} {
    status_var_update status_waldlaeufer_aktiv
}

#VAR waldlaeufer_aktiv {
    {1}     {{name} {haut}      {symbol} {${color_inactive}R}}
    {2}     {{name} {auge}      {symbol} {${color_inactive}J}}
    {3}     {{name} {schnell}   {symbol} {${color_inactive}S}}
    {4}     {{name} {pakt}      {symbol} {${color_inactive}P}}
    {5}     {{name} {panther}   {symbol} {${color_inactive}A}}
}

#ALIAS {change_status_symbol_aktiv} {
    change_status_symbol waldlaeufer_aktiv {%1} {%2} {%3}
} {5};

#ALIAS {set_status_symbol_aktiv} {
    set_status_symbol waldlaeufer_aktiv {%1} {%2}
} {5};

#NOP { /**
 *	@brief	status_waldlaeufer_pfad
 */};

#FUNCTION {status_waldlaeufer_pfad} {
    #VAR gesamt_tmp {};
    #IF { @_an_aus{config[waldlaeufer_pfad1]} == 0 && @_an_aus{config[waldlaeufer_pfad2]} == 0 } {
        #FORMAT {gesamt_tmp} {%s<099>|} {$waldlaeufer_spells};
        #RETURN $gesamt_tmp
    };
    #IF { @_an_aus{config[waldlaeufer_pfad1]} } {
        #LIST result_tmp COPY waldlaeufer_${config[waldlaeufer_pfad1]};
        #LIST result_tmp INDEXATE symbol;
        #LIST result_tmp COLLAPSE {};
        #FORMAT gesamt_tmp {%s%s} {$gesamt_tmp} {$result_tmp}
    };
    #IF { @_an_aus{config[waldlaeufer_pfad2]} } {
        #LIST result_tmp COPY waldlaeufer_${config[waldlaeufer_pfad2]};
        #LIST result_tmp INDEXATE symbol;
        #LIST result_tmp COLLAPSE {};
        #FORMAT gesamt_tmp {%s%s} {$gesamt_tmp} {$result_tmp}
    };
    #IF { "$gesamt_tmp" != "" } {
        #FORMAT {gesamt_tmp} {%s<099>|} {$gesamt_tmp}
    };
    #RETURN $gesamt_tmp
}

#EVENT {VARIABLE UPDATED waldlaeufer_pfad} {
    status_var_update status_waldlaeufer_pfad
}

#VAR waldlaeufer_pfad {
}

#EVENT {VARIABLE UPDATED waldlaeufer_spells} {
    #IF { @_an_aus{config[waldlaeufer_pfad1]} || @_an_aus{config[waldlaeufer_pfad2]} } {
        #RETURN
    };
    #ELSE {
        #VAR waldlaeufer_pfad kein_pfad
    }
}

#VAR waldlaeufer_spells {
}

#NOP { /**
 *  @fn     status_zustand
 *  @brief  setzt Block mit aktuellem Zustand fuer die Statuszeile
 *
 *  @return     formatierter String
 */};

#FUNCTION {status_zustand} {
    #LIST result COPY waldlaeufer_zustand;
    #LIST result COLLAPSE {};
    #FORMAT {result} {%s<099>|} {$result}
}

#EVENT {VARIABLE UPDATED waldlaeufer_zustand} {
    status_var_update status_zustand
}

#VAR waldlaeufer_zustand {
}

#NOP { /**
 *  @fn     status_tier
 *  @brief  setzt Block mit aktuellem Tier-Zustand fuer die Statuszeile
 *
 *  @return     formatierter String
 */};

#FUNCTION {status_tier} {
    #IF { "$waldlaeufer_tier_status" == "" } {
        #VAR waldlaeufer_tier_status {${color_inactive}Tier${color_active}|}
    };

    #REGEXP {$waldlaeufer_tier_status} {%+{\d+}%!*|%.} {
        #IF { "&3" == " " } {
            #VAR tmp_tier_pad {$color_inactive}
        };
        #ELSE {
            #VAR tmp_tier_pad {$color_active}
        };
        #VAR waldlaeufer_tier[hp] &2;
        #IF { ! &{waldlaeufer_tier[max_hp]} || {$waldlaeufer_tier[max_hp] < $waldlaeufer_tier[hp]} } {
            #VAR waldlaeufer_tier[max_hp] $waldlaeufer_tier[hp]
        };
        #FORMAT {waldlaeufer_tier_status} {%s%c%s<099> %c!<099>|}
            {&1} {@calccolor{$waldlaeufer_tier[hp];$waldlaeufer_tier[max_hp]}} {&2} {$tmp_tier_pad};
    };

    #LIST result COPY waldlaeufer_tier_status;
    #LIST result COLLAPSE {};
    #FORMAT {result} {%s<099>} {$result}
}

#EVENT {VARIABLE UPDATED waldlaeufer_tier_status} {
    status_var_update status_tier
}

#VAR waldlaeufer_tier_status {
}



#NOP { /**
 *	@brief	Waldlaeufer Report
 *
 *  Aktive Optionen im Waldlaeuferreport sind:
 *  wlreport max 1
 *  wlreport spezial 1
 *  wlreport zauber 1
 *  wlreport gesinnung 1
 *  wlreport erweitert 1
 *  wlreport erfahrung 1
 *  wlreport tierleben 1
 *
 *  ~[------------]~[________]~{Boese}~{LP:337/337|MP:278/308(+1)}~[Tier: 655(+0)| ]~~[XP: 157129076]
 *  ~[------------]~[________]~{Boese}~{LP:337/337|MP:279/308(+1)}~[XP: 157129076]
 *
 */};

#ACTION {{~\[(.+)\]~\[(.+)\]~.(.+).~.LP:(\d+)\/(\d+)(\(.*\))?\|MP:(\d+)\/(\d+)(\(.*\))?.~(\[(Tier:\s*\d+.+\|.)\]~~)?\[XP: (\d+)\]}} {
    #VAR status[hp] {%5};
    #VAR status[maxhp] {%6};
    #IF { &{status[lasthp]} == 0 } {
        #VAR status[lasthp] {%5};
    };
    #MATH {status[diffhp]} { $status[hp] - $status[lasthp] };
    #VAR status[lasthp] {%5};

    #VAR status[mp] {%8};
    #VAR status[maxmp] {%9};
    #IF { &{status[lastmp]} == 0 } {
        #VAR status[lastmp] {%8};
    };
    #MATH {status[diffmp]} { $status[mp] - $status[lastmp] };
    #VAR status[lastmp] {%8};

    #IF { $status[diffmp] > 0 } {
        shift_statusband <060>+$status[diffmp]<099>
    };
    #IF { $status[diffhp] > 0 } {
        shift_statusband <020>+$status[diffhp]<099>
    };
    #IF { $status[diffmp] < 0 } {
        shift_statusband <140>$status[diffmp]<099>
    };
    #IF { $status[diffhp] < 0 } {
        shift_statusband <010>$status[diffhp]<099>
    };
    #IF { $status[diffhp] != 0 || $status[diffmp] != 0 } {
        #NOP { /**
        *   @todo   Aufruf von scrolling nur Ã¼ber Funktion
        */};
        #SHOWME {$scrolling} {-4} {61}
    };

    #IF {"$waldlaeufer_spells" != "%2"} {
        #VAR waldlaeufer_spells {%2}
    };

    #IF {"$waldlaeufer_zustand" != "%3"} {
        #VAR waldlaeufer_zustand {%3}
    };
    #IF {"$waldlaeufer_tier" != "%12"} {
        #VAR waldlaeufer_tier_status {%12}
    };

    #FORMAT {align} {%p} {%4};
    #IF { "$status[align]" != "%4" } {
        #FORMAT {status[align]} {%p} {%4}
    };

    #CLASS ${mud}_vars ASSIGN {
        #VAR xp[previous] {$xp[current]};
    };
    #VAR xp[current] {%13};
    #IF { $xp[log] } {
        #IF { $xp[previous] > $xp[current] } {
            #IF { $jadering == 1 } {
                #VAR jadering {0};
                #ECHO {Der Jadering hat Dir %m XP abgezogen} {$xp[previous] - $xp[current]};
                #MATH {xp[lost]} {$xp[lost] - $xp[previous] + $xp[current]}
            };
            #ELSE {
                #MATH {xp[death]} {$xp[death] + $xp[previous] - $xp[current]};
                #MATH {xp[deaths]} {$xp[deaths] + 1}
            }
        };
        #MATH {xp[diff]} {$xp[current] - $xp[start] + $xp[death]}
    };

    #IF { $jadering == 1 } {
        #VAR jadering {0}
    };

    #LINE GAG
} {5}

#ALIAS {spell_ende} {
    timer_end %2;
    #ECHO {%c%s%c (%t)} {$color_spell_ende} {%1} {<099>} {{%M:%S}{$timer[%2][dauer]}};
} {5};

#NOP { /**
 *	@brief	Kommunikation
 */};

#HIGHLIGHT {^Der Wind traegt Euch eine Botschaft %+ heran:} {<F49b>};
#SUBSTITUTE {^\{%1 %2\}$} {<F49b>\{%1<099> %2<F49b>\}<099>};

#NOP { /**
 *	@brief	Ausweichtexte
 */};

#ACTION {^Du gehst in die Knie und tauchst unter den Angriff durch.} {
    setze_angriff_effekte 1 A;
    #LINE GAG;
} {5};

#ACTION {^Du machst einen Schritt nach vorne und rechts und springst mit einem Salto} {
    setze_angriff_effekte 1 A;
    #LINE GAG 3;
} {5};

#ACTION {^Du laesst Dich nach hinten fallen und nach einer geschickten Rueckwaertsrolle} {
    setze_angriff_effekte 1 A;
    #LINE GAG 2;
} {5};

#ACTION {^Blitzartig wirbelst Du herum und Durch die schnelle Drehung, gelingt es deinem} {
    setze_angriff_effekte 1 A;
    #LINE GAG 2;
} {5};

#ACTION {^Du springst genau nach oben, ziehst die Beine an und der Angriff verfehlt} {
    setze_angriff_effekte 1 A;
    #LINE GAG 2;
} {5};

#ACTION {^Schnell und sicher schlaegst du ein Rad zur Seite und rettest Dich so vor dem} {
    setze_angriff_effekte 1 A;
    #LINE GAG 2;
} {5};

#ACTION {^Wie ein Karnickel schlaegst Du Haken und bringst Dich in Sicherheit.} {
    setze_angriff_effekte 1 A;
    #LINE GAG;
} {5};

#ACTION {^Im letzten Moment rollst Du Dich nach rechts ab.} {
    setze_angriff_effekte 1 A;
    #LINE GAG;
} {5};

#ACTION {^Mit einem kraeftigen Sprung hechtest Du aus der Reichweite deines Feindes.} {
    setze_angriff_effekte 1 A;
    #LINE GAG;
} {5};

#ACTION {^Du beugst Dich schnell nach hinten und spuerst wie der Angriff knapp ueber} {
    setze_angriff_effekte 1 A;
    #LINE GAG 2;
} {5};

#ACTION {^Reaktionsschnell wirfst Du Dich auf den Boden und wirst somit nicht getroffen.} {
    setze_angriff_effekte 1 A;
    #LINE GAG;
} {5};

#ACTION {^Du rollst Dich nach vorne ab.} {
    setze_angriff_effekte 1 A;
    #LINE GAG;
} {5};

#ACTION {^Du laeufst an der Wand entlang und springst nach einem Wandlauf ueber den} {
    setze_angriff_effekte 1 A;
    #LINE GAG 2;
} {5};

#ACTION {^Du rollst Dich in letzter Sekunde nach links ab.} {
    setze_angriff_effekte 1 A;
    #LINE GAG;
} {5};

#ACTION {^Du springst schnell an eine Wand, um Dich gleich wieder mit eine Drehung zur} {
    setze_angriff_effekte 1 A;
    #LINE GAG 2;
} {5};

#ACTION {^Du drehst dich um, springst an die Wand und drueckst Dich nach hinten ab. Mit} {
    setze_angriff_effekte 1 A;
    #LINE GAG 2;
} {5};

#ACTION {^Schnell gehst Du hinter einem Baum in Deckung.} {
    setze_angriff_effekte 1 A;
    #LINE GAG;
} {5};

#ACTION {^Du wirbelst herum, laeufst auf einem Baum zu. Du laeufst den Baum gekonnt mit} {
    setze_angriff_effekte 1 A;
    #LINE GAG 4;
} {5};

#ACTION {^Du wirfst einige Blaetter und Zweige nach oben, durch die gekonnte Ablenkung} {
    setze_angriff_effekte 1 A;
    #LINE GAG 2;
} {5};

#ACTION {^Du springst schnell nach oben, schwingst Dich an einem Ast rauf und entgehst} {
    setze_angriff_effekte 1 A;
    #LINE GAG 2;
} {5};

#ACTION {^Schnell fliegst Du nach oben und wirst so nicht getroffen.} {
    setze_angriff_effekte 1 A;
    #LINE GAG;
} {5};



#NOP { /**
 *	@brief	Spells
 */};

#NOP { /**
 *	@brief	Augen des Jaegers
 */};

#ACTION {^Deine Augen werden die eines Raubtiers. Du kannst nun im Dunklen sehen.} {
    timer_start auge;
    set_status_symbol_aktiv auge on
} {5};

#ACTION {^Deine Sehkraft wird wieder normal.} {
    spell_ende {%0} auge;
    set_status_symbol_aktiv auge off;
    #LINE GAG
} {4.9};



#NOP { /**
 *	@brief	Geschwindigkeit
 */};

#ACTION {^Du spannst Deine Muskeln an und beginnst deinen Gegner schneller anzugreifen.} {
    timer_start schnell;
    set_status_symbol_aktiv schnell on
} {5};

#ACTION {^Deine Glieder sind erschoepft. Deine Angriffe erfolgen wieder in normaler} {
    change_status_symbol_aktiv schnell S i;
    set_status_symbol_aktiv schnell on
} {5};

#ACTION {^Dein Kreislauf hat sich wieder beruhigt.} {
    #IF { &{info[SESSIONS][$gruppe[partner]]} && @{$gruppe[partner]}{$gruppe[aktiv]} } {
        #${gruppe[partner]} #ECHO {<ffa>%0<099>};
    };
    spell_ende {%0} schnell;
    change_status_symbol_aktiv schnell i S;
    set_status_symbol_aktiv schnell off;
    #LINE GAG
} {5}



#NOP { /**
 *	@brief	Pakt der Schatten
 */};

#ACTION {^Du konzentrierst Dich auf die Bewegungen Deines Schattens...} {
    timer_start pakt_1;
    set_status_symbol_aktiv pakt on
} {5};

#ACTION {^Du verlaesst Die Welt der Schatten.} {
    spell_ende {%0} pakt_1;
    timer_start pakt_2;
    change_status_symbol_aktiv pakt P p;
    set_status_symbol_aktiv pakt on;
    #LINE GAG;
} {5};

#ACTION {Du kehrst vollstaendig aus den Schatten zurueck und wirst wieder normal.} {
    spell_ende {%0} pakt_2;
    ueben_check 2;
    change_status_symbol_aktiv pakt p P;
    set_status_symbol_aktiv pakt off;
    #LINE GAG;
} {5};



#NOP { /**
 *	@brief	Rindenhaut
 */};

#ACTION {^Du erhaelst die Haut einer %w.} {
    timer_start haut;
    set_status_symbol_aktiv haut on
} {5};

#ACTION {^Deine Haut wird wieder normal.} {
    spell_ende {%0} haut;
    set_status_symbol_aktiv haut off;
    #LINE GAG;
} {4.9};



#NOP { /**
 *	@brief	Aspekt des Panthers
 */};

#ACTION {^Fauchend faehrt der Geist des Tierkoenigs der Panther in dich ein. Deine} {
    timer_start panther;
    set_status_symbol_aktiv panther on
} {5};

#ACTION {Es gelingt dir nicht den Geist des Panthers in dich aufzunehmen.} {
    timer_start panther
} {5};

#ACTION {Der Geist des Panthers verlaesst dich wieder.} {
    spell_ende {%0} panther;
    set_status_symbol_aktiv panther off;
    #LINE GAG;
    ueben_check 6
} {5};

#ACTION {^Du wurdest entdeckt!} {
    #NOP
} {5};



#NOP { /**
 *	@brief	Kampf-Spells
 */};

#NOP { /**
 *	@brief	Fusstritt
 */};

#ACTION {^Du trittst %+ mit ganzer Kraft.} {
    setze_angriff_spell fusstritt;
    #LINE GAG
} {5};



#NOP { /**
 *	@brief	Messerstich
 */};

#ACTION {^Du springst %+ an und stichst zu.} {
    setze_angriff_spell messerstich;
    #LINE GAG
} {5};



#NOP { /**
 *	@brief	Deutschuss
 */};

#ACTION {^Du visierst kurz %+ an und schiesst.} {
    setze_angriff_spell deutschuss;
    #LINE GAG
} {5};



#NOP { /**
 *	@brief	Umwandlung der Anzeige der Waldlaeufer-Fertigkeiten
 *
 *  #actions in eigene Klasse ausgelagert, die bei Bedarf geladen wird
 */};

#CLASS wl_fertigkeiten OPEN

#ACTION {^ %+ kannst Du %+.} {
    #ECHO {%s %s} {@dotfill{<ffd>%1<099>;40}} {@waldlaeufer_fert{%2}<099>};
    #LINE GAG
} {5.0}

#ACTION {^ In Summe bist du %+.} {
    #ECHO {%s %s} {@dotfill{<ffd>Durchschnitt<099>;40}} {@waldlaeufer_fert{%1}<099>};
    #LINE GAG
} {4.9}

#CLASS wl_fertigkeiten SAVE
#CLASS wl_fertigkeiten CLEAR
#CLASS wl_fertigkeiten CLOSE

#FUNCTION waldlaeufer_fert {
    #LIST wfort FIND {%0} tmp;
    #IF {$tmp < 11} {
        #VAR tmp_color {<bba>}
    };
    #ELSEIF {$tmp < 15} {
        #VAR tmp_color {<bca>}
    };
    #ELSEIF {$tmp < 18} {
        #VAR tmp_color {<bdb>}
    };
    #ELSEIF {$tmp < 21} {
        #VAR tmp_color {<dea>}
    };
    #ELSEIF {$tmp < 25} {
        #VAR tmp_color {<bfa>}
    };
    #ELSE {
        #VAR tmp_color {<dfc><388>}
    };
    #RETURN ${tmp_color}%0
}

#ALIAS {fert} {
    #CLASS wl_fertigkeiten LOAD;
    prompt_func fert_ende;
    #SEND {fert}
}

add_help {fert} {waldlaeufer}
    {Zeigt bei Raziel die Fertigkeiten in leicht veraenderter Form an}
    {fert}

#ALIAS {fert_ende} {
    #CLASS wl_fertigkeiten CLEAR;
    prompt_func stop
}

#VAR wfort {
    {1} {ueberhaupt nicht}
    {2} {eigentlich nicht}
    {3} {fast gar nicht}
    {4} {kaum}
    {5} {sehr schlecht}
    {6} {nur sehr laienhaft}
    {7} {schlecht}
    {8} {wie ein Amateur}
    {9} {unterdurchschnittlich}
    {10}{durchschnittlich}
    {11}{etwas ueberdurchschnittlich}
    {12}{ueberdurchschnittlich}
    {13}{fast ausreichend}
    {14}{ausreichend}
    {15}{recht sicher}
    {16}{relativ gut}
    {17}{gut}
    {18}{sehr gut}
    {19}{wie ein Waldlaeufer}
    {20}{fast fehlerfrei}
    {21}{wie ein Hueter}
    {22}{fehlerfrei}
    {23}{wie ein Meister}
    {24}{wie ein Lehrmeister}
    {25}{wie ein legendaerer Meister}
}



#NOP { /**
 *  @brief  Zeigt Stufen fuer den Skill-Fortschritt
 *
 */};

#ALIAS {wfort} {
    #VAR tmp_count {1};
    #SCREEN GET {SCROLL_COLS} {tmp_width};
    #VAR tmp_line {};
    #WHILE {$tmp_count <= &wfort[] } {
        #FORMAT {tmp_line_len} {%L} {$tmp_line};
        #FORMAT {tmp_item_len} {%L} {$wfort[$tmp_count]};
        #MATH {tmp_total_len} {$tmp_line_len + $tmp_item_len + 5};

        #VAR tmp_item @waldlaeufer_fert{$wfort[$tmp_count]};

        #IF {$tmp_total_len > $tmp_width} {
            #ECHO {$tmp_line<099>};
            #VAR tmp_line {$tmp_item};
        };
        #ELSEIF {"$tmp_line" == ""} {
            #VAR tmp_line {$tmp_item};
        };
        #ELSE {
            #CAT tmp_line {     $tmp_item}
        };
        inc tmp_count
    };
    #ECHO {$tmp_line<099>}
} {5};

add_help {wfort} {waldlaeufer}
    {Zeigt eine Liste der Fertigkeitsstufen an}
    {wfort}



#NOP { /**
 *	Kraeutersuche
 *
 *  @todo   vorherige Waffe speichern und nach 'stop' zuecken
 */};

#HIGHLIGHT {^Leider war Deine Kraeutersuche erfolglos.} {<dbb>}
#HIGHLIGHT {^Du verstehst die lokale Pflanzenwelt nun besser.} {<bdb>}
#HIGHLIGHT {^Du berrschst die Kraeuterkunde nun besser.} {<bdb>}
#HIGHLIGHT {^Du hast einige Kraeuter gefunden.} {<bdb>}
#HIGHLIGHT {Du steckst %+ in dein Bandolier.} {bold}

#ALIAS {kraeuter_suche} {
    #IF {"%1" == "start"} {
        #ACTION {^Leider war Deine Kraeutersuche erfolglos.} {
            #SEND {kraeutersuche}
        } {5};
        #ACTION {^Du hast einige Kraeuter gefunden.} {
            #NOP #SEND {oeffne kraeuterbeutel};
            #NOP #SEND {leg alles ausser behaltenes in kraeuterbeutel};
            #NOP #SEND {schliesse kraeuterbeutel};
            #NOP #VAR prompt_skip 1;
            #NOP prompt_func kraeuter_suche_prompt;
            kraeuter_suche stop
        } {5};
        #ACTION {^Hier wurden schon vor kurzer Zeit Kraeuter gesucht.} {
            kraeuter_suche stop
        } {5};
        #NOP aa ziehe 1;
        #SEND {zueck kraeutersichel};
        #SEND {kraeutersuche}
    };
    #ELSEIF {"%1" == "stop"} {
        #UNACTION {^Leider war Deine Kraeutersuche erfolglos.};
        #UNACTION {^Hier wurden schon vor kurzer Zeit Kraeuter gesucht.};
        #UNACTION {^Du hast einige Kraeuter gefunden.};
        #NOP aa trage 1;
        #SEND {zueck dolch}
    };
    #ELSE {
        #ECHO {Anwendung: kraut start|stop}
    }
} {5};

#ALIAS {kraeuter_suche_prompt} {
    #IF {$prompt_skip == 0} {
        #UNACTION {^Du legst d{as|en|ie} %+ in den Kraeuterbeutel.};
        #UNHIGHLIGHT {Du steckst %+ in dein Bandolier.};
        prompt_func stop;
        #RETURN
    };
    dec prompt_skip;
    #LIST kraeuter CLEAR;
    #HIGHLIGHT {Du steckst %+ in dein Bandolier.} {bold};
    #ACTION {^Du legst d{as|en|ie} %+ in den Kraeuterbeutel.} {
        #LIST kraeuter ADD {%%2};
    } {5}
} {5};

#ALIAS {kraut} {
    kraeuter_suche %0
} {5};

add_help {kraut} {waldlaeufer}
    {Startet die Kraeutersuche solange bis die Suche erfolgreich ist.}
    {kraut start|stop}

#ALIAS {kmix} {
    #IF { "%0" != "" } {
        #SEND {beschwoere 'kraeutermixtur' auf %0};
        #RETURN
    };
    #IF { &{kraeuter[-1]} } {
        #SEND {beschwoere 'kraeutermixtur' auf $kraeuter[-1]};
        #LIST kraeuter DEL -1
    };
    #ELSE {
        #ECHO {Die Kraeuterliste ist leer.}
    }
} {5};

#ALIAS {ukr} {
    #ACTION {^Er ist geoeffnet und enthaelt:} {
        prompt_func kraeuterbeutel_prompt;
        #CLASS kraeuter OPEN;
        #IF { "%1" != "" } {
            set_tmp_highlight %1
        };
        #CLASS kraeuter CLOSE;
    } {5};
    #SEND {oeffne $container[kraeuter]};
    ubeu kraeuter
} {5};

add_help {ukr} {waldlaeufer}
    {Zeigt den Inhalt des Kraeuterbeutels, optional angegebene Wirkung farbig.}
    {ukr [hunger|durst|gift|ausdauer|alkohol|leben|magie|taub|blind|frosch|unterwasser|malaria]}

#ALIAS {set_tmp_highlight} {
    #LIST tmp COPY kraeuter;
    #LIST tmp INDEXATE wirkung;
    #LIST tmp FILTER {%*{%1}%*};
    #FOREACH {$tmp[%*]} {item} {
        #LINE ONESHOT {
            #HIGHLIGHT {$item[name]} {<bdb>};
        };
    };
}

#ALIAS {kraeuterbeutel_prompt} {
    #CLASS kraeuter KILL;
    prompt_func stop;
    #UNACTION {^Er ist geoeffnet und enthaelt:}
} {5};

#ALIAS {lkr} {
    #SEND {leg jedes heilkraut in $container[kraeuter]}
} {5};

add_help {lkr} {waldlaeufer}
    {Legt jedes Heilkraut in den Kraeuterbeutel}
    {lkr <kraut>}

#ALIAS {nkr} {
    #SEND {nimm %0 aus $container[kraeuter]};
}

add_help {nkr} {waldlaeufer}
    {Nimmt Kraeuter aus dem Kraeuterbeutel.}
    {nkr <kraut>}

#ALIAS {nmix} {
    #SEND {oeffne $container[kraeuter]};
    nkr mixtur
}

add_help {nmix} {waldlaeufer}
    {Nimmt eine Mixtur aus dem Kraeuterbeutel.}
    {nmix}

#ALIAS {imix} {
    nmix;
    #SEND {iss mixtur}
}

add_help {imix} {waldlaeufer}
    {Nimmt eine Mixtur aus dem Kraeuterbeutel und vertilgt sie sofort.}
    {imix}

#ALIAS {ksort} {
    #LIST tmp_kraut COPY kraeuter;
    #LIST tmp_kraut INDEXATE wirkung;
    #LIST tmp_kraut FILTER {} {%i%*{%1}%*};
    #SEND {oeffne $container[kraeuter]};
    #FOREACH {$tmp_kraut[]} {loop} {
        nkr $loop[name];
    }
}

#VAR kraeuter
{
    {1} {{name}    {Lungenkraut}       {level}  {1} {wirkung}   {unterwasser} }
    {2} {{name}    {Sonnenwurzel}      {level}  {1} {wirkung}   {krankheiten,malaria} }
    {3} {{name}    {Teichkraut}        {level}  {1} {wirkung}   {frosch} }
    {4} {{name}    {Kronstoeckl}       {level}  {2} {wirkung}   {frosch} }
    {5} {{name}    {Wanderblatt}       {level}  {1} {wirkung}   {ausdauer} }
    {6} {{name}    {Wanderkraut}       {level}  {2} {wirkung}   {ausdauer} }
    {7} {{name}    {Wanderwurzel}      {level}  {3} {wirkung}   {ausdauer} }
    {8} {{name}    {Hexenkraut}        {level}  {1} {wirkung}   {taub} }
    {9} {{name}    {Wolfsbeere}        {level}  {2} {wirkung}   {taub} }
    {10}{{name}    {Nachtblatt}        {level}  {1} {wirkung}   {blind} }
    {11}{{name}    {Nachtkraut}        {level}  {2} {wirkung}   {blind} }
    {12}{{name}    {Nachtwurzel}       {level}  {3} {wirkung}   {blind} }
    {13}{{name}    {Elfenkraut}        {level}  {1} {wirkung}   {taub,blind} }
    {14}{{name}    {Jaegerkraut}       {level}  {2} {wirkung}   {taub,blind} }
    {15}{{name}    {Dunkelbeere}       {level}  {1} {wirkung}   {alkohol} }
    {16}{{name}    {Gruenblatt}        {level}  {2} {wirkung}   {alkohol} }
    {17}{{name}    {Schattengras}      {level}  {3} {wirkung}   {alkohol} }
    {18}{{name}    {Mondwurzel}        {level}  {1} {wirkung}   {durst} }
    {19}{{name}    {Sandwurzel}        {level}  {2} {wirkung}   {durst} }
    {20}{{name}    {Spinnenmoos}       {level}  {3} {wirkung}   {durst} }
    {21}{{name}    {Himmelsmoos}       {level}  {1} {wirkung}   {durst,alkohol} }
    {22}{{name}    {Zwergengras}       {level}  {2} {wirkung}   {durst,alkohol} }
    {23}{{name}    {Waechtergras}      {level}  {3} {wirkung}   {durst,alkohol} }
    {24}{{name}    {Waldefeu}          {level}  {1} {wirkung}   {hunger} }
    {25}{{name}    {Kreuwurzel}        {level}  {2} {wirkung}   {hunger} }
    {26}{{name}    {Guertelgras}       {level}  {3} {wirkung}   {hunger} }
    {27}{{name}    {Zwergenfinger}     {level}  {4} {wirkung}   {hunger} }
    {28}{{name}    {Silberknolle}      {level}  {4} {wirkung}   {hunger,durst,alkohol} }
    {29}{{name}    {Sturmdrachenfeuer} {level}  {5} {wirkung}   {hunger,durst,alkohol} }
    {30}{{name}    {Feuerblatt}        {level}  {1} {wirkung}   {magie} }
    {31}{{name}    {Feuerkraut}        {level}  {2} {wirkung}   {magie} }
    {32}{{name}    {Feuerwurzel}       {level}  {3} {wirkung}   {magie} }
    {33}{{name}    {Tethyrblatt}       {level}  {1} {wirkung}   {leben} }
    {34}{{name}    {Tethyrkraut}       {level}  {2} {wirkung}   {leben} }
    {35}{{name}    {Tethyrwurzel}      {level}  {3} {wirkung}   {leben} }
    {36}{{name}    {Waldlotus}         {level}  {1} {wirkung}   {magie,leben} }
    {37}{{name}    {Shuriknolle}       {level}  {1} {wirkung}   {gift} }
    {38}{{name}    {Schlangenkraut}    {level}  {2} {wirkung}   {gift} }
    {39}{{name}    {Kobraknolle}       {level}  {3} {wirkung}   {gift} }
    {40}{{name}    {Kreuzblatt}        {level}  {4} {wirkung}   {gift} }
}

#CLASS wl_bandolier OPEN

#SUBSTITUTE {^ %+1..d {Wanderkraut|Wanderwurzel|Wanderblatt}mixtur$} {@bandolier_show{%0;<eec>[E]<099>}}
#SUBSTITUTE {^ %+1..d {Teichkraut|Kronstoeckl}mixtur$} {@bandolier_show{%0;<eec>[F]<099>}}
#SUBSTITUTE {^ %+1..d {Lungenkraut}mixtur$} {@bandolier_show{%0;<eec>[W]<099>}}
#SUBSTITUTE {^ %+1..d {Shuriknolle|Schlangenkraut|Kobraknolle|Kreuzblatt}mixtur$} {@bandolier_show{%0;<eec>[G]<099>}}
#SUBSTITUTE {^ %+1..d {Silberknolle|Sturmdrachenfeuer}mixtur$} {@bandolier_show{%0;<eec>[HDA]<099>}}
#SUBSTITUTE {^ %+1..d {Zwergenfinger|Guertelgras|Kreuwurzel|Waldefeu}mixtur$} {@bandolier_show{%0;<eec>[H]<099>}}
#SUBSTITUTE {^ %+1..d {Spinnenmoos|Sandwurzel|Mondwurzel}mixtur$} {@bandolier_show{%0;<eec>[D]<099>}}
#SUBSTITUTE {^ %+1..d {Waechtergras|Zwergengras|Himmelsmoos}mixtur$} {@bandolier_show{%0;<eec>[DA]<099>}}
#SUBSTITUTE {^ %+1..d {Schattengras|Gruengras|Dunkelbeere}mixtur$} {@bandolier_show{%0;<eec>[A]<099>}}
#SUBSTITUTE {^ %+1..d {Jaegerkraut|Elfenkraut}mixtur$} {@bandolier_show{%0;<eec>[BT]<099>}}
#SUBSTITUTE {^ %+1..d {Nachtblatt|Nachtkraut|Nachtwurzel}mixtur$} {@bandolier_show{%0;<eec>[B]<099>}}
#SUBSTITUTE {^ %+1..d {Wolfsbeere|Hexenkraut}mixtur$} {@bandolier_show{%0;<eec>[T]<099>}}
#SUBSTITUTE {^ %+1..d {Sonnenwurzel}mixtur$} {@bandolier_show{%0;<eec>[K]<099>}}
#SUBSTITUTE {^ %+1..d {Tethyrblatt|Tethyrkraut|Tethyrwurzel}mixtur$} {@bandolier_show{%0;<eec>[L]<099>}}
#SUBSTITUTE {^ %+1..d {Feuerblatt|Feuerkraut|Feuerwurzel|}mixtur$} {@bandolier_show{%0;<eec>[M]<099>}}
#SUBSTITUTE {^ %+1..d {Waldlotus}mixtur$} {@bandolier_show{%0;<eec>[LM]<099>}}

#CLASS wl_bandolier SAVE
#CLASS wl_bandolier CLEAR
#CLASS wl_bandolier CLOSE

#FUNCTION {bandolier_show} {
    inc bandolier_zaehler;
    #LOCAL tmp_bandolier %1;
    #REPLACE tmp_bandolier {%+1..d } {};
    #LIST bandolier ADD $tmp_bandolier;
    #FORMAT result {(%+2s) %s %s} {$bandolier_zaehler} {%1} {%2};
    #RETURN $result
}

#ALIAS {ban} {
    #IF { &bandolier[] == 0 } {
        echo_msg {Die Bandolier Liste ist leer.};
        #RETURN
    };

    #IF { "%0" == "" } {
        echo_msg {Bitte eine Mixtur auswaehlen.};
        #RETURN
    };

    #IF { "%0" != "{\d+}" } {
        echo_msg {Bitte eine Zahl angeben.};
        #RETURN
    };

    #IF { %0 > &bandolier[] || %0 < 0 } {
        echo_msg {Mixtur nicht bekannt.};
        #RETURN
    };

    #SEND {trinke $bandolier[%0]}
}

#ALIAS {bandolier} {
    #CLASS wl_bandolier LOAD;
    #VAR bandolier_zaehler 0;
    #LIST bandolier CREATE {};
    #HIGHLIGHT {%+ %+1..d {@bandolier_filter{%1}}mixtur} {<Fadf>};
    prompt_func bandolier_ende %1;
    #DELAY {0.2} {
    };
    #SEND {unt bandolier}
}

#ALIAS {bandolier_ende} {
    echo_msg {Mit 'ban <zahl>' die entsprechende Mixtur trinken.};
    #UNHIGHLIGHT {%+ %+1..d {@bandolier_filter{%1}}mixtur};
    #CLASS wl_bandolier CLEAR;
    prompt_func stop
}

#FUNCTION {bandolier_filter} {
    #IF { "%0" != "{durst|hunger|ausdauer|aus|blind|taub|frosch|alkohol|alk|magie|leben|gift|unterwasser|wasser}" } {
        #RETURN ""
    };
    #LIST tmp_bandolier COPY kraeuter;
    #LIST tmp_bandolier INDEXATE wirkung;
    #LIST tmp_bandolier FILTER %*%1%*;
    #LIST tmp_bandolier INDEXATE name;
    #LIST tmp_bandolier SIMPLIFY;
    #REPLACE {tmp_bandolier} {;} {|};
    #RETURN $tmp_bandolier
}

#NOP { /**
 *	@brief	Begleittier Befehle und Ãbersicht
 *
 *  @todo   Namen fuer das zahme Tier setzen
 *  @todo   Tiere als Kampfhelfer deklarieren, wenn 'kampf' gesetzt wird
 */};

#HIGHLIGHT {^Ein%? %+ ist staerker geworden.} {<499><acf>}

#ALIAS {za} {
    #SEND {beschwoere 'zaehmung' auf %1};
    #LINE ONESHOT {
        #ACTION {^Du hast es geschafft!$} {
            #UNACTION {^Du hast noch ein gezaehmtes Tier!};
            tier_zahm %1
        } {5};
        #ACTION {^Du hast noch ein gezaehmtes Tier!} {
            #UNACTION {^Du hast es geschafft!$};
        } {5};
    }
} {5};

add_help {za} {waldlaeufer}
    {Tierbeherrschung: Zaehmen eines Tieres.}
    {za <tier>}

#ALIAS {tiver} {
    #IF { "%1" == "zahm" } {
        tier_del zahm
    };
    #ELSEIF { "%1" != "" } {
        tier_del %1
    };
    #ELSE {
        #LIST tier_test_tmp COPY tier_test;
        #LIST tier_test_tmp INDEXATE zahm;
        #LIST tier_test_tmp FILTER 0;
        #IF { &tier_test_tmp[] > 0 } {
            #FOREACH {$tier_test_tmp[]} {loop} {
                tier_del $loop[tier]
            }
        };
        #ELSE {
            echo_msg {Hier ist gerade kein Tier. 'tiver zahm' um das zahme Tier wegzuschicken.}
        }
    };
    update_var
} {5};

add_help {tiver} {waldlaeufer}
    {Tierbeherrschung: Endgueltiges Wegschicken eines oder aller aktiven Tiere.}
    {tiver [zahm|<name>]}

#ALIAS {tiv} {
    #VAR tmp_index 0;
    #IF { &{tier_test[]} > 0 } {
        #LIST tier_test INDEXATE zahm;
        #LIST tier_test FIND {1} tmp_index
    };
    #IF { $tmp_index == 0 } {
        echo_msg {Kein gezaehmtes Tier vorhanden.};
        #RETURN
    };
    #IF { $tier_test[1][aktiv] == 1 } {
        tier_aktiv aus
    };
    #ELSE {
        tier_aktiv ein
    }
} {5};

add_help {tiv} {waldlaeufer}
    {Tierbeherrschung: Zahmes Tier ins Versteck schicken und zurueck holen.}
    {tiv}

#ALIAS {tik} {
    #VAR tmp_index 0;
    #IF { &{tier_test[]} > 0 } {
        #LIST tier_test_tmp COPY tier_test;
        #LIST tier_test_tmp INDEXATE aktiv;
        #LIST tier_test_tmp FILTER {1};
    };
    #IF { &tier_test_tmp[] == 0} {
        echo_msg {Kein Tier anwesend fuer Befehle.};
        #RETURN
    };

    #IF { $tier_test_tmp[1][kampf] == 1 } {
        tier_kampf aus
    };
    #ELSE {
        tier_kampf ein
    }
} {5};

add_help {tik} {waldlaeufer}
    {Tierbeherrschung: Kampfunterstuetzung der aktiven Tiere umschalten.}
    {tik}

#ALIAS {hh} {
    tier_kampf ein
} {5};

add_help {hh} {waldlaeufer}
    {Tierbeherrschung: Alle aktiven Tiere zum Unterstuetzen im Kampf auffordern.}
    {hh}

#ALIAS {tier} {
    tier_show
} {5};

add_help {tier} {waldlaeufer}
    {Tierbeherrschung: Zeigt den aktuellen Status deiner Begleittiere an.}
    {tier}

#NOP { /**
 *	@brief	Funktionen fÃ¼r neue Tier-Behandlung mit mehr Tieren
 *
 *  @todo   Nur gezaehmte Tiere bei Start laden
 */};

#ALIAS {tier_show} {
    #VAR max_len 4;
    #FOREACH {$tier_test[%*]} loop {
        #FORMAT {tmp_len} {%L} {$loop[tier]};
        #IF { $tmp_len > $max_len } {
            #VAR max_len $tmp_len
        }
    };
    #NOP /* Titelzeile */;
    #ECHO { %-${max_len}s | %s | %s} {Tier} {Kampf} {Aktiv};
    #ECHO {-%s-+-%s-+-%s-} {@char_repeat{-;$max_len}} {@char_repeat{-;5}} {@char_repeat{-;5}};
    #FOREACH {$tier_test[%*]} loop {
        #ECHO { %-${max_len}n | %s | %s} {$loop[tier]}
            {@center_text{5;@an_aus{loop[kampf]}}}
            {@center_text{5;@an_aus{loop[aktiv]}}}
    }
}

#ALIAS {tier_zahm} {
    #VAR tmp_index 0;
    #IF { &{tier_test[]} > 0 } {
        #LIST tier_test INDEXATE zahm;
        #LIST tier_test FIND {1} tmp_index
    };
    #IF { $tmp_index == 0 } {
        tier_add %1 zahm;
    };
    #ELSE {
        echo_msg {Noch gezaehmtes Tier %n vorhanden.} {$tier_test[$tmp_index][tier]};
    }
}

#ALIAS {tier_add} {
    #IF { "%2" == "zahm" } {
        #CLASS $info[SESSION][NAME]_vars ASSIGN {
            #LIST tier_test INSERT 1 {
                {id}    {1}
                {name}  {}
                {tier}  {%1}
                {kampf} {0}
                {aktiv} {1}
                {zahm}  {1}
            }
        };
        echo_msg {Zahmes Tier %n hinzugefuegt.} {%1};
    };
    #ELSE {
        #CLASS $info[SESSION][NAME]_vars ASSIGN {
            #LIST tier_test ADD {{
                {name}  {}
                {tier}  {%1}
                {kampf} {0}
                {aktiv} {1}
                {zahm}  {0}
            }}
        };
        #VAR tier_test[-1][id] {&tier_test[]};
        echo_msg {Tier %n hinzugefuegt.} {%1};
        setze_tier_status %1
    }
}

#ALIAS {tier_aktiv} {
    #IF { "%1" == "ein" } {
        #SEND {spiele melodie der treue};
        #VAR tier_test[1][aktiv] 1
    };
    #IF { "%1" == "aus" } {
        #SEND {sag $tier_test[1][tier] versteck dich};
        #VAR tier_test[1][aktiv] 0;
        #VAR tier_test[1][kampf] 0;
    }
}

#ALIAS {tier_del} {
    #IF { "%1" == "zahm" } {
        #LIST tier_test INDEXATE zahm;
        #LIST tier_test FIND {1} tmp_index;
        #IF { $tmp_index > 0 } {
            #IF { $tier_test[$tmp_index][aktiv] == 0 } {
                echo_msg {Dein zahmes Tier ist gar nicht anwesend.};
                #RETURN
            };
            #SEND {sag $tier_test[$tmp_index][tier] verschwinde};
            echo_msg {Zahmes Tier %n entfernt.} {$tier_test[$tmp_index][tier]};
            #LIST tier_test DEL $tmp_index;
            list_reset_ids tier_test
        };
        #ELSE {
            echo_msg {Du hast gerade kein zahmes Tier.}
        };
        #RETURN
    };
    #LIST tier_test INDEXATE tier;
    #LIST tier_test FIND %1 tmp_del_index;
    #IF { $tmp_del_index > 0 } {
        #IF { $tier_test[$tmp_del_index][zahm] == 1 } {
            echo_msg {Aber das ist doch dein zahmes Tier!};
            #RETURN
        };
        #IF { "%2" != "q" } {
            #SEND {sag $tier_test[$tmp_del_index][tier] verschwinde};
        };
        entferne_tier_status $tier_test[$tmp_del_index][tier];
        #LIST tier_test DEL $tmp_del_index;
        list_reset_ids tier_test;
        echo_msg {Tier %1 entfernt.}
    };
    #ELSE {
        echo_msg {Du hast kein Tier namens %n.} {%1}
    }
}

#ALIAS {tier_kampf} {
    #LIST tier_test_tmp COPY tier_test;
    #LIST tier_test_tmp INDEXATE aktiv;
    #LIST tier_test_tmp FILTER {1};

    #IF { &tier_test_tmp[] == 0 } {
        echo_msg {Kein Tier anwesend fuer Befehle.};
        #RETURN
    };

    #IF { "%1" == "ein" } {
        #FOREACH {$tier_test_tmp[]} {loop} {
            #SEND {sag $loop[tier] hilf mir};
            #VAR tier_test[$loop[id]][kampf] 1
        }
    };
    #IF { "%1" == "aus" } {
        #FOREACH {$tier_test_tmp[]} {loop} {
            #SEND {sag $loop[tier] kampfpause};
            #VAR tier_test[$loop[id]][kampf] 0
        }
    }

} {5};

#ALIAS {list_reset_ids} {
    #IF { &{%1[]} == 0 } {
        #RETURN
    };
    #FOREACH {*{%1[]}} {loop} {
        #VAR %1[$loop][id] $loop
    }
} {5};

#ALIAS {be} {
    #IF { "%0" == "" && $tier_test[1][aktiv] == 1} {
        #SEND {be $tier_test[1][tier]}
    };
    #ELSE {
        #SEND {be %0}
    }
} {5};

#NOP { /**
 *	@brief	Informationen aus 'wlinfo' auslesen
 */};

#CLASS wl_info OPEN

#ACTION {Belastung:%!s[%+]} {
    #LINE GAG;
    #LIST statusinfo ADD {Last: @wlinfo_len{%1}% | }
} {5};

#ACTION {Ausdauer:%!s[%+]} {
    #LINE GAG;
    #LIST statusinfo ADD {Ausd: @wlinfo_len{%1}% | }
} {5};

#ACTION {Vermoegen:%!s%+1..d Muenzen} {
    #LINE GAG;
    #LIST statusinfo ADD {Geld: %1 | }
} {5};

#ACTION {Umgebung: %+1..w, Du bist %+\.} {
    #LINE GAG;
    #LIST statusinfo ADD {Terrain: @wlinfo_terrain{%2} (%1)}
} {5};

#ACTION {^%*$} {
    #LINE GAG;
} {9};

#FUNCTION {wlinfo_len} {
    #VAR wlinfo_len 0;
    #REGEXP {%1} {{#+}} {
        #FORMAT {wlinfo_len} {%L} {&1}
    };
    #MATH {result} {$wlinfo_len * 10};
    #RETURN $result
};

#FUNCTION {wlinfo_terrain} {
    #SWITCH { "%0" } {
        #CASE { "in huegeligen Land" } {
            #VAR result {Huegel}
        };
        #CASE { "im Gebirge" } {
            #VAR result {Gebirge}
        };
        #CASE { "im Sumpf" } {
            #VAR result {Sumpf}
        };
        #CASE { "im Wald" } {
            #VAR result {Wald}
        };
        #CASE { "auf einer Ebene" } {
            #VAR result {Ebene}
        };
        #CASE { "in einem Haus" } {
            #VAR result {Haus}
        };
        #CASE { "auf einer Strasse" } {
            #VAR result {Strasse}
        };
        #CASE { "im Wasser" } {
            #VAR result {Wasser}
        };
        #CASE { "in einer Hoehle" } {
            #VAR result {Hoehle}
        };
        #CASE { "in der Stadt" } {
            #VAR result {Stadt}
        };
        #CASE { "im Dschungel" } {
            #VAR result {Dschungel}
        };
        #CASE { "in arktischen Gefilden" } {
            #VAR result {Arktis}
        };
        #DEFAULT {
            #VAR result {unbekannt}
        };
    };
    #RETURN $result
};

#CLASS wl_info SAVE
#CLASS wl_info CLEAR
#CLASS wl_info CLOSE

#ALIAS {wi} {
    #CLASS wl_info LOAD;
    #LIST statusinfo CREATE {};
    prompt_func wlinfo_ende;
    #SEND {wlinfo}
}

#ALIAS {wlinfo_ende} {
    #LIST statusinfo COLLAPSE {};
    #CLASS wl_info CLEAR;
    #SCREEN GET SCROLL_COLS tmp_width;
    #FORMAT statusinfo {%-${tmp_width}s} {$statusinfo};
    draw_status;
    prompt_func stop
}



#NOP { /**
 *	@brief	Spellcombos
 */};

#ALIAS {toggle_spell} {
    #SEND {${%1[angriff][${%1[next]}]}};
    #IF { ${%1[next]} == 1 } {
        #VAR %1[next] 2
    };
    #ELSE {
        #VAR %1[next] 1
    }
}

#VAR {mf}
{
    {next}  {1}
    {angriff}
    {
        {1} {beschwoere 'messerstich'}
        {2} {beschwoere 'fusstritt'}
    }
}

#ALIAS {mf} {
    toggle_spell mf
}

#VAR {fallen}
{
    {next}  {1}
    {angriff}
    {
        {1} {beschwoere 'fesselfalle'}
        {2} {beschwoere 'fangfalle'}
    }
}

#ALIAS {fall} {
    toggle_spell fallen
}



#NOP { /**
 *	@brief	Zustand mit Augen des Jaegers
 */};

#SUBSTITUTE {~\e[0m\e[32m\e[40m%+ ist absolut fit\e[0m.\e[0m}                            {@auge_zustand{%1;100;%0}};
#SUBSTITUTE {~\e[0m\e[32m\e[40m%+ ist bei ausgezeichneter Gesundheit\e[0m.\e[0m}         {@auge_zustand{%1;99;%0}};
#SUBSTITUTE {~\e[0m\e[32m\e[40m%+ ist bei hervorragender Gesundheit\e[0m.\e[0m}          {@auge_zustand{%1;96;%0}};
#SUBSTITUTE {~\e[0m\e[32m\e[40m%+ ist noch bei bester Gesundheit\e[0m.\e[0m}             {@auge_zustand{%1;93;%0}};

#SUBSTITUTE {~\e[0m\e[32m\e[40m%+ hat erst ein paar Kratzer\e[0m.\e[0m}                  {@auge_zustand{%1;90;%0}};
#SUBSTITUTE {~\e[0m\e[32m\e[40m%+ hat schon einige Kratzer\e[0m.\e[0m}                   {@auge_zustand{%1;87;%0}};
#SUBSTITUTE {~\e[0m\e[32m\e[40m%+ hat schon viele Kratzer\e[0m.\e[0m}                    {@auge_zustand{%1;84;%0}};

#SUBSTITUTE {~\e[0m\e[32m\e[40m%+ ist schon etwas geschwaecht\e[0m.\e[0m}                {@auge_zustand{%1;81;%0}};
#SUBSTITUTE {~\e[0m\e[32m\e[40m%+ ist schon ziemlich geschwaecht\e[0m.\e[0m}             {@auge_zustand{%1;78;%0}};

#SUBSTITUTE {~\e[0m\e[32m\e[40m%+ fuehlte sich heute schon besser\e[0m.\e[0m}            {@auge_zustand{%1;75;%0}};
#SUBSTITUTE {~\e[0m\e[32m\e[40m%+ fuehlt sich etwas schlecht\e[0m.\e[0m}                 {@auge_zustand{%1;72;%0}};
#SUBSTITUTE {~\e[0m\e[32m\e[40m%+ fuehlt sich ziemlich schlecht\e[0m.\e[0m}              {@auge_zustand{%1;69;%0}};

#SUBSTITUTE {~\e[0m\e[32m\e[40m%+ ist leicht angeschlagen\e[0m.\e[0m}                    {@auge_zustand{%1;66;%0}};
#SUBSTITUTE {~\e[0m\e[32m\e[40m%+ ist ziemlich angeschlagen\e[0m.\e[0m}                  {@auge_zustand{%1;63;%0}};
#SUBSTITUTE {~\e[0m\e[32m\e[40m%+ ist schwer angeschlagen\e[0m.\e[0m}                    {@auge_zustand{%1;60;%0}};

#SUBSTITUTE {~\e[0m\e[32m\e[40m%+ sieht nicht mehr taufrisch aus\e[0m.\e[0m}             {@auge_zustand{%1;57;%0}};
#SUBSTITUTE {~\e[0m\e[32m\e[40m%+ sieht gar nicht mehr gut aus\e[0m.\e[0m}               {@auge_zustand{%1;54;%0}};
#SUBSTITUTE {~\e[0m\e[32m\e[40m%+ sieht schon relativ schlecht aus\e[0m.\e[0m}           {@auge_zustand{%1;51;%0}};

#SUBSTITUTE {~\e[0m\e[32m\e[40m%+ macht einen etwas mitgenommenen Eindruck\e[0m.\e[0m}   {@auge_zustand{%1;48;%0}};
#SUBSTITUTE {~\e[0m\e[32m\e[40m%+ macht einen mitgenommenen Eindruck\e[0m.\e[0m}         {@auge_zustand{%1;45;%0}};
#SUBSTITUTE {~\e[0m\e[32m\e[40m%+ macht einen stark mitgenommenen Eindruck\e[0m.\e[0m}   {@auge_zustand{%1;42;%0}};

#SUBSTITUTE {~\e[0m\e[32m\e[40m%+ wankt schon etwas\e[0m.\e[0m}                          {@auge_zustand{%1;39;%0}};
#SUBSTITUTE {~\e[0m\e[32m\e[40m%+ wankt bereits bedenklich\e[0m.\e[0m}                   {@auge_zustand{%1;36;%0}};
#SUBSTITUTE {~\e[0m\e[32m\e[40m%+ ist in einem ueblen Zustand\e[0m.\e[0m}                {@auge_zustand{%1;33;%0}};

#SUBSTITUTE {~\e[0m\e[32m\e[40m%+ ist in keiner guten Verfassung\e[0m.\e[0m}             {@auge_zustand{%1;30;%0}};
#SUBSTITUTE {~\e[0m\e[32m\e[40m%+ ist in sehr schlechter Verfassung\e[0m.\e[0m}          {@auge_zustand{%1;27;%0}};
#SUBSTITUTE {~\e[0m\e[32m\e[40m%+ ist in extrem schlechter Verfassung\e[0m.\e[0m}        {@auge_zustand{%1;24;%0}};

#SUBSTITUTE {~\e[0m\e[32m\e[40m%+ braucht bald einen Arzt\e[0m.\e[0m}                    {@auge_zustand{%1;21;%0}};
#SUBSTITUTE {~\e[0m\e[32m\e[40m%+ braucht dringend einen Arzt\e[0m.\e[0m}                {@auge_zustand{%1;18;%0}};
#SUBSTITUTE {~\e[0m\e[32m\e[40m%+ braucht sofort einen Notarzt\e[0m.\e[0m}               {@auge_zustand{%1;15;%0}};

#SUBSTITUTE {~\e[0m\e[32m\e[40m%+ blutet aus vielen schweren Wunden\e[0m.\e[0m}          {@auge_zustand{%1;12;%0}};
#SUBSTITUTE {~\e[0m\e[32m\e[40m%+ blutet aus vielen toedlichen Wunden\e[0m.\e[0m}        {@auge_zustand{%1;9;%0}};
#SUBSTITUTE {~\e[0m\e[32m\e[40m%+ steht auf der Schwelle des Todes\e[0m.\e[0m}           {@auge_zustand{%1;6;%0}};
#SUBSTITUTE {~\e[0m\e[32m\e[40m%+ ist am Verbluten und wird gleich sterben\e[0m.\e[0m}   {@auge_zustand{%1;3;%0}};
#SUBSTITUTE {~\e[0m\e[32m\e[40m%+ ist eigentlich schon tot\e[0m.\e[0m}                   {@auge_zustand{%1;0;%0}};

#FUNCTION {auge_zustand} {
    #IF {$screen[panels] == 1} {
        #FORMAT {result} { [%+2s%%] %3} {%2};
        #RETURN $result
    };
    #VAR monokel_chars feind_liste;
    #IF { &{feind_liste[]} > 0 } {
        #LIST feind_liste INDEXATE name;
    };
    #LIST feind_liste FIND {%1} tmp_index;
    #IF { $tmp_index == 0 } {
        #LIST feind_liste ADD {{{name}{%1}{zustand}{%2}}};
    };
    #ELSE {
        #VAR feind_liste[$tmp_index][zustand] {%2};
    };
    draw_zustand;
    #LINE GAG;
    #RETURN {}
} {5};



#NOP { /**
 *	@brief	Nach Ende des Kampfes ausfÃ¼hren
 *
 *  Variable 'post_kampf' enthÃ¤lt den Namen eines Alias, dass nach dem Kampf
 *  aufgerufen wird.
 */};

#VAR post_kampf wald_nach_kampf;

#ALIAS {wald_nach_kampf} {
    #IF { &{feind_liste} } {
        #LIST feind_liste CLEAR
    };
    #ELSE {
        #LIST feind_liste CREATE {}
    };
    #VAR mf[next] 1;
    draw_zustand
}



#NOP { /**
 *	@brief	Ueben
 */};

#ACTION {^Du lernst aus Deinem Fehler.} {
    #IF { ! @_an_aus{wald_ueben} } {
        #RETURN
    };
    #DELAY {wald_ueben} {
        $wald_ueben[cmd]
    } $wald_ueben[delay]
} {5};

#ALIAS {ueben start} {
    #IF { "%1" == "" } {
        echo_msg {Bitte Spell angeben.};
        #RETURN
    };
    #VAR wald_ueben[cmd] %1;
    #VAR timer_end_function %1;

    echo_msg {Ueben gestartet.};
    #NOP #SEND {%1};
    %1
} {5};

#ALIAS {ueben stop} {
    #VAR wald_ueben {};
    #UNVAR timer_end_function;
    #UNTICKER {wald_ueben};
    echo_msg {Ueben gestoppt.}
} {5};

#ALIAS {ueben_check} {
    #IF { ! @_an_aus{wald_ueben} } {
        #RETURN
    };
    #IF { "%1" == "%+1..d" } {
        #VAR wald_ueben[delay] %1;
    };
    #ELSE {
        #VAR wald_ueben[delay] 2;
    };
    #DELAY {wald_ueben} {
        $wald_ueben[cmd]
    } $wald_ueben[delay]
} {5};

#NOP { /**
 *	@brief	Kombo
 */};

#VAR kombo {
    {1} {{name} {kw}    {pause} {4}}
    {2} {{name} {mes}   {pause} {2}}
    {3} {{name} {fu}    {pause} {2}}
    {4} {{name} {aw}    {pause} {6}}
}

#ALIAS {kombo} {
    
} {5};

#CLASS waldlaeufer CLOSE
