#NOP { /**
 *  @class  mapping
 *  @brief  Alles was mit dem Mapping in tintin++ zu tun hat.
 */}

#CLASS mapping KILL
#CLASS mapping OPEN

#ECHO {<029>-- <188>%s<288> geladen<099>} {mapping/mapping.tin}

#READ mapping/roomtabs.tin

#KILL PATHDIR
#PATHDIR    {n}     {s}     {1}
#PATHDIR    {o}     {w}     {2}
#PATHDIR    {no}    {sw}    {3}
#PATHDIR    {s}     {n}     {4}
#PATHDIR    {so}    {nw}    {6}
#PATHDIR    {w}     {o}     {8}
#PATHDIR    {nw}    {so}    {9}
#PATHDIR    {sw}    {no}    {12}
#PATHDIR    {ob}    {u}     {16}
#PATHDIR    {nob}   {su}    {17}
#PATHDIR    {oob}   {wu}    {18}
#PATHDIR    {noob}  {swu}   {19}
#PATHDIR    {sob}   {nu}    {20}
#PATHDIR    {soob}  {nwu}   {22}
#PATHDIR    {wob}   {ou}    {24}
#PATHDIR    {nwob}  {sou}   {25}
#PATHDIR    {swob}  {nou}   {28}
#PATHDIR    {u}     {ob}    {32}
#PATHDIR    {nu}    {sob}   {33}
#PATHDIR    {ou}    {wob}   {34}
#PATHDIR    {nou}   {swob}  {35}
#PATHDIR    {su}    {nob}   {36}
#PATHDIR    {sou}   {nwob}  {38}
#PATHDIR    {wu}    {oob}   {40}
#PATHDIR    {nwu}   {soob}  {41}
#PATHDIR    {swu}   {noob}  {44}

#VAR karten_farben
{
    {laden}         {{farbe}{fdb}   {symbol}{<fdb>L<099>}}
    {kneipe}        {{farbe}{aba}   {symbol}{<aba>K<099>}}
    {schmied}       {{farbe}{ebb}   {symbol}{<ebb>S<099>}}
    {teleport}      {{farbe}{fbf}   {symbol}{<fbf>T<099>}}
    {gilde}         {{farbe}{acf}   {symbol}{<acf>G<099>}}
    {post}          {{farbe}{cca}   {symbol}{<cca>P<099>}}
    {transport}     {{farbe}{}      {symbol}{<fbf>t<099>}}
    {portal}        {{farbe}{}      {symbol}{<fbf>p<099>}}
    {seherhaus}     {{farbe}{abb}   {symbol}{ }}
    {seherladen}    {{farbe}{fdb}   {symbol}{<fdb>S<099>}}
    {tierladen}     {{farbe}{fdb}   {symbol}{<fdb>T<099>}}
    {heiler}        {{farbe}{daa}   {symbol}{<daa>H<099>}}
    {kapelle}       {{farbe}{FE7D}  {symbol}{<FE7D>K<099>}}
}

#VAR valid_areas
{
    {1} {schlachtfeld}
    {2} {kyranda}
    {3} {midas}
    {4} {astral}
    {5} {dhrkion}
    {6} {knarkh}
    {7} {derlim}
    {8} {tijara}
    {9} {dschungelelfen}
    {10}{yiqanuc}
    {11}{arrakeen}
    {12}{avir}
    {13}{elessar}
    {14}{abgrund}
    {15}{vampirfriedhof}
    {16}{brunnen}
    {17}{erg}
    {18}{todesturm}
    {19}{mechanus}
    {20}{frostania}
    {21}{inferno}
    {22}{djinnistan}
    {23}{elysia}
}

#VARIABLE mapping
{
    {rows}  {27}
    {top}   {2}
};

#EVENT {MAP SHORT-CLICKED MOUSE BUTTON ONE} {
    go %4
}

#EVENT {MAP ENTER MAP} {
    #MAP FLAG VTMAP ON;
    map_set_offset
}

#EVENT {MAP ENTER ROOM} {
    #IF { $draw_map_status == 1 || $map_walking == 1 } {
        #RETURN
    };
    #IF { $map_walking == 1 } {
        #RETURN
    };
    map_enter_room %0 %1
}

#EVENT {MAP EXIT ROOM} {
    #MAP GET ROOMVNUM vnum_prev
}

#EVENT {MAP CREATE ROOM} {
    #IF { @_an_aus{region_map_create_room_function} } {
        $region_map_create_room_function %0
    };
};

#ALIAS {map_set_offset} {
    #MAP OFFSET $mapping[top] 1 $mapping[top]+$mapping[rows] $screen[left]-1
}

#NOP { /**
 *	@brief	Bei Session-Verbindung ausfuehren
 *
 *  @todo   auf vorhandene Karten pruefen
 */};

#ALIAS {map_init} {
    #MAP READ maps/%1.map;
    #MAP GOTO $vnum;
    #IF { "%1" == "silberland" } {
        #MAP AT 746 {
            #MAP GET ROOMEXITS tmp_exits;
            #IF { @_an_aus{config[seher]} == 0 } {
                #FOREACH {*tmp_exits[]} {loop} {
                    #MAP EXITFLAG {$loop} AVOID ON
                };
            };
            #ELSE {
                #FOREACH {*tmp_exits[]} {loop} {
                    #MAP EXITFLAG {$loop} AVOID OFF
                };
            };
            #MAP WRITE maps/silberland.map;
        };
    }
}

#NOP { /**
 *  @fn     def_map_enter_room
 *  @brief
 */};

#ALIAS {def_map_enter_room} {
    #VAR roominfo {};
    #LOCAL minimap_area {};
    #LOCAL anhang {};
    #LOCAL ausgabe {};

    #LIST feinde CLEAR;

    #MAP GET ALL roominfo;
    #CLASS ${mud}_vars ASSIGN {#VAR vnum $roominfo[vnum]};

    #IF { "$roominfo[area]" != "" } {
        check_area $roominfo[area];
        #FORMAT minimap_area { im Gebiet %n} {$roominfo[area]}
    };
    #ELSE {
        #LIST valid_areas FIND $last_area tmp;
        #IF { $tmp > 0 } {
            #CLASS $last_area KILL;
            #VAR last_area {}
        };
    };
    #IF { "$roominfo[desc]" != "" } {
        #FORMAT roominfo[desc] { %n} {$roominfo[desc]}
    };
    #IF { "$roominfo[desc]" != "" || "$minimap_area" != "" } {
        #FORMAT anhang {,%n%s} {$roominfo[desc]} {$minimap_area}
    };
    #FORMAT {ausgabe} { %-16n [%+4s]%-33s} {$roominfo[name]} {$roominfo[vnum]} {$anhang};

    #SHOWME {$ausgabe} {$screen[top]+$mapping[rows]+1} {1};
    #DRAW RIGHT TEED HORIZONTAL LINE $screen[top]+$mapping[rows]+2 1 $screen[top]+$mapping[rows]+2 $screen[left];

    #IF { "$sidepanel[tabs][$sidepanel[active]][name]" == "mapping" } {
        sidepanel_show
    };

    update_var
}

#ALIAS {map_enter_room} {
    update_map;

    #IF { @_an_aus{region_map_enter_room_function} } {
        $region_map_enter_room_function %1 %2
    };

    def_map_enter_room;

    #IF { @_an_aus{gruppe[folgen]} && @_an_aus{gruppe[partner]} } {
        #$gruppe[partner] go $vnum
    };
    #NOP ;
}

#ALIAS {check_area} {
    #CLASS %1 SIZE tmp;
    #IF { $tmp > 0 } {
        #RETURN
    };
    #LIST valid_areas FIND $last_area tmp;
    #IF { $tmp > 0 } {
        #IF { &{exit_area_function} } {
            $exit_area_function
        };
        #CLASS $last_area KILL;
        #VAR last_area {}
    };
    #LIST valid_areas FIND %1 tmp;
    #IF { $tmp > 0 } {
        #READ region/%1.tin;
        #VAR last_area %1
    }
}

#ACTION {{^Es gibt .+ sichtbaren? Ausgae?nge?(.+)$}} {
#NOP { 
    #IF { "$modus[ausgaenge]" == "" } {
        #RETURN
    };
 #NOP };
    #VAR ausgaenge_lang {};
    #VAR ausgaenge_temp {};

    #IF { "%2" == "." } {
        modus_ausfuehren;
        #RETURN
    };
    #ELSE {
        #REGEXP {%2} {{: (.+)}} {
            #VAR ausgaenge_temp &2
        }
    };

    #REGEXP {%2} {{^: (.+)\. ?$}} {
        #VAR ausgaenge_lang &2;
        modus_ausfuehren
    } {
        #VAR ausgaenge_lang {$ausgaenge_temp};
        #ACTION {{^(.+)\. ?$}} {
            #CAT ausgaenge_lang { %%2};
            modus_ausfuehren;
            #UNACTION {{^(.+)\. ?$}}
        } {1}
    }
} {1}

#ALIAS {modus_ausfuehren} {
    #SWITCH { "$modus[ausgaenge]" } {
        #CASE {"brunnen"} {
            modus_brunnen
        };
        #CASE {"wald"} {
            modus_wald
        };
        #CASE {"untersuchen"} {
            modus_untersuchen
        };
        #CASE {"hash"} {
            modus_hash
        };
        #CASE {"fernglas"} {
            modus_fernglas
        };
        #CASE {"suchen"} {
            modus_suchen
        };
        #CASE {"nebel"} {
            modus_nebel
        };
        #DEFAULT {
            #IF { @_an_aus{region_modus_function} } {
                $region_modus_function
            };
        };
    }
}

#ALIAS {modus_setzen} {
    #IF { "%0" == "" } {
        #VAR modus[ausgaenge] {$modus[ausgaenge_prev]};
        #VAR modus[ausgaenge_prev] {};
        #RETURN
    };

    #IF { "$modus[ausgaenge]" == "%0" } {
        #RETURN
    };
    #VAR modus[ausgaenge_prev] {$modus[ausgaenge]};
    #VAR modus[ausgaenge] {%0}
}

#ALIAS {modus_hash}
{
    #UNACTION {{.+}};
    modus_setzen;

    #NOP #FORMAT {hash_room} {%H} {$raumbeschreibung};
    #NOP #FORMAT {hash_exit} {%H} {$ausgaenge_lang};
    #FORMAT {hash} {%H} {$raumbeschreibung$ausgaenge_lang};
    #NOP #ECHO {room: %s\nexit: %s\ntotal: %s} {$hash_room} {$hash_exit} {$hash};
    #MAP SET ROOMID $hash
}

#ALIAS {wo} {
    modus_setzen hash;
    #VAR raumbeschreibung {};
    #ACTION {{.+}} {
        #IF { "$raumbeschreibung" == "" } {
            #VAR raumbeschreibung {%%0}
        };
        #ELSE {
            #CAT raumbeschreibung { %%0}
        };
    };
    #SEND {schau}
}

#ALIAS {update_map} {
    #IF { @_an_aus{update_map} == 0 } {
        #RETURN
    };
    #IF { &{update_map[area]} } {
        #MAP SET ROOMAREA $update_map[area]
    };
    #IF { &{update_map[terrain]} } {
        #MAP SET ROOMTERRAIN $update_map[terrain]
    }
}

#ALIAS {mapupdate} {
    #SWITCH { "%1" } {
        #CASE {"set"} {
            #ECHO {Setze ...}
        };
        #CASE {"del"} {
            #ECHO {Loesche ...}
        }
    }
}

#ACTION {^-- Lese Karte: %1, Raum: %2} {
    #DELAY {0.2} {
        #MAP LEAVE;
        #MAP READ %1;
        #MAP GOTO %2
    }
}

#NOP { /**
 *  @fn go
 *  @brief  Geht zu einer bestimmten Stelle auf der Karte
 *
 * umstaendliche Nutzung von PATH um ein Kommando im vorletzten Raum
 * auszufuehren
 */};

#ALIAS {go} {
    #IF { "%0" == "" } {
        #RETURN
    };

    #SWITCH { @search_nearest{ROOMNAME;%0} } {
        #CASE {0} {
            #ECHO {Du bist bereits dort.};
            #RETURN
        };
        #CASE {-1} {
            #ECHO {Raum nicht gefunden.};
            #RETURN
        }
    };

    #MAP FIND %0;
    #LOCAL path_go {};
    #VAR last {};
    #PATH SAVE FORWARD path_go;

    #NOP #UNEVENT {MAP ENTER ROOM};
    #VAR map_walking 1;
    #CLASS walkgag READ mapping/walkgag.tin;
    #SEND {ultrakurz};
    #REGEXP {$path_go} {^{[^;]+}$} {
        #VAR last {&1}
    } {
        #REGEXP {$path_go} {^{.+};{[^;]+}$} {
            #VAR last {&2};
            #PATH LOAD {&1};
            #PATH RUN
        }
    };
    #SEND {kurz};
    #NOP { /**;
    #EVENT {MAP ENTER ROOM}
    {
        map_enter_room
    };
    */};
    #PATH LOAD $last;
    #VAR map_walking 0;
    #PATH RUN;
    #DELAY {1} {
        #CLASS walkgag KILL
    }
}

add_help {go} {karte}
    {Gehe zu einem bestimmten Raum}
    {go <name|vnum>}

#FUNCTION {search_nearest} {
    #LOCAL tmp {};
    #IF { "%3" != "" && "%4" != "" } {
        #ECHO {3: %3, 4: %4.};
        #MAP LIST {VARIABLE} {tmp} {%1} {%2} {%3} {%4}
    };
    #ELSE {
        #MAP LIST {VARIABLE} {tmp} {%1} {%2}
    };

    #LOCAL minval 0.000;
    #FOREACH *tmp[] idx {
        #IF { $tmp[$idx][distance] == -1.000 } {
            #CONTINUE
        };
        #IF { $minval == 0.000 } {
            #LOCAL minval {$tmp[$idx][distance]};
            #LOCAL minidx $idx
        };
        #IF { $tmp[$idx][distance] < $minval } {
            #LOCAL minval {$tmp[$idx][distance]};
            #LOCAL minidx $idx
        }
    };

    #IF { $minval > 1.000 } {
        #RETURN $minidx
    };
    #ELSEIF { $minval == 1.000 } {
        #RETURN 0
    };
    #ELSE {
        #RETURN -1
    }
}

#ALIAS {sgo} {
    #LOCAL target @search_nearest{ROOMDESC;%1};
    #SWITCH { $target } {
        #CASE {0} {
            #ECHO {Du bist bereits dort.}
        };
        #CASE {-1} {
            #ECHO {Existiert nicht oder ist von hier nicht erreichbar.}
        };
        #DEFAULT {
            go $target
        }
    }
}

add_help {sgo} {karte}
    {Gehe zum dichtesten Raum mit einer bestimmten Beschreibung}
    {sgo <roomdesc>}

#ALIAS {ago} {
    #MAP GET ROOMAREA tmp;
    #LOCAL target @search_nearest{ROOMDESC;%1;ROOMAREA;$tmp};
    #SWITCH { $target } {
        #CASE {0} {
            #ECHO {Du bist bereits dort.}
        };
        #CASE {-1} {
            #ECHO {Existiert nicht oder ist von hier nicht erreichbar.}
        };
        #DEFAULT {
            go $target;
        }
    }
}

add_help {ago} {karte}
    {Gehe zum dichtesten Raum in aktueller Gegend mit einer bestimmten Beschreibung}
    {ago <roomdesc>}

#ALIAS {mgo} {
    #IF { "%1" == "" } {
        #IF { @_an_aus{mark} == 0 } {
            #ECHO {%s} {Keine Markierung gesetzt.}
        };
        #ELSE {
            go $mark
        }
    };
    #ELSE {
        #MAP GET ROOMVNUM mark;
        go %1
    }
}

add_help {mgo} {karte}
    {Bewegung zwischen Ziel und markiertem Raum}
    {mgo <ziel>}

#ALIAS {mark} {
    #MAP GET ROOMVNUM mark;
    #ECHO {Markierung auf Raum '%s' gesetzt.} {$mark}
}

add_help {mark} {karte}
    {Markiert einen Raum}
    {mark}

#ALIAS {trav} {
    #MAP TRAVEL %1
}

add_help {trav} {karte}
    {Geht in eine Richtung bis zu einer Kreuzung}
    {trav <Richtung>}

#ALIAS {goto} {
    #MAP GOTO %0;
    #SEND {schau}
}

add_help {goto} {karte}
    {Setzt den aktuellen Raum auf der Karte}
    {goto <name|vnum>}

#ALIAS {undo} {
    #MAP UNDO
}

add_help {undo} {karte}
    {Macht das letzte Kartenkommando rueckgaengig}
    {undo}

#ALIAS {aus} {
    #MAP MAP 3 6
}

add_help {aus} {karte}
    {Zeige Minikarte nur mit Ausgaengen des aktuellen Raumes}
    {aus}

#ALIAS {map} {
    #MAP MAP 15 30;
    #MAP GET ROOMNAME raumname;
    #MAP GET ROOMVNUM raumvnum;
    #ECHO {\nRaum: %+16s  ( %s )} {$raumname} {$raumvnum}
}

add_help {map} {karte}
    {Zeigt eine Karte der aktuellen Umgebung}
    {map}

#ALIAS {mmap} {
    #MAP MAP
}

add_help {mmap} {karte}
    {Zeigt grosse Karte der Umgebung}
    {mmap}

#ALIAS {kartenfarbe} {
    #IF { &karten_farben[%1] } {
        #LOCAL item $karten_farben[%1]
    };
    #ELSE {
        #ECHO {Unbekannte Kategorie: %1};
        #RETURN
    };

    #LOCAL farbe 099;
    #LOCAL symbol { };

    #IF { "$item[farbe]" != "" } {
        #MAP SET ROOMCOLOR <$item[farbe]>;
        #LOCAL farbe $item[farbe]
    };
    #ELSE {
        #MAP SET ROOMCOLOR;
    };

    #IF { "$item[symbol]" != "" } {
        #MAP SET ROOMSYMBOL $item[symbol];
        #LOCAL symbol $item[symbol]
    };
    #ELSE {
        #MAP SET ROOMSYMBOL;
    };

    #MAP SET ROOMDESC %1;

    #ECHO {Setze: %1, <%s>[%s<%s>]<099>} {$farbe} {$symbol} {$farbe}
}

add_help {kartenfarbe} {karte}
    {Setzt Symbol und Farbe eines Raumes auf der Karte}
    {kartenfarbe <karten_farben>}

#NOP { /**
 *	@brief	NPC versperrt Weg (u.a. Leopard)
 */};

#ACTION {%+ stellt sich Dir in den Weg.} {
    #MAP UNDO
}

#ACTION {Ahhhhhhhhhhh! Eine kleine Lawine reisst Dich mit. Du faellst nach unten!} {
    #MAP GOTO 1512
}

#ACTION {Beim Versuch weiter nach {Sueden|Norden} zu gehen, purzelst Du ins Wasser.}
{
    #NOP    @todo   path unterbrechen;
    #LINE ONESHOT #SUBSTITUTE {%0} {<239>%0<099>};
    #MAP GOTO 47
}

#ACTION {Du versuchst, aus dem Kaefig zu springen, aber Du springst nicht hoch genug} {
    #MAP UNDO
} {5};

#NOP { /**
 *	@brief	Raum durch umherlaufen auf der Karte finden
 */};

#ALIAS {suchen} {
    #IF { $suchen == 1 } {
        #VAR suchen 0;
        #ECHO {Okay, suchen abgebrochen.};
        modus_setzen;
        #RETURN
    };
    #VAR suchen 1;
    #VAR suchen_raeume_alt {};
    #VAR suchen_raeume {};
    #LIST suchen_result CREATE {};
    #ECHO {Suchen geht los.};
    modus_setzen suchen;
}

add_help {suchen} {karte}
    {startet Suchmodus um Position in Karte zu finden}
    {suchen}

#NOP { /**
    Raum 1:
    - Ausgaenge rausfinden
    - alle Raeume mit gleichen Ausgaengen finden
    - Raeume in Liste_1 eintragen
    Raum 2:
    - Ausgaenge rausfinden
    - alle Raeume mit gleichen Ausgaengen finden
    - Raeume in Liste_2 eintragen
    - Item_1 Ausgaenge und Ziele suchen
    - Ziel_1_1 in Liste_1 vorhanden -> weiter
    - Alle Ausgaenge von Ziel_1 nicht in Liste_1 vorhanden -> Ziel_1 aus Liste_2 loeschen
    - Item_2 Ausgaenge und Ziele suchen ...
 */};

#ALIAS {modus_suchen} {
    #VAR ausgaenge_list @text_to_list{$ausgaenge_lang;((nord|sued|west|ost)(west|ost|)en)};
    #LIST ausgaenge_kurz CREATE {};

    #FOREACH $ausgaenge_list[%*] loop {
        #REGEXP {$loop} {{^(n|s|w|o)(ord|ued|st|est)en}} {
            #LIST ausgaenge_kurz ADD &2
        };
        #REGEXP {$loop} {{(n|s)(or|ue)d(w|o)e?sten}} {
            #LIST ausgaenge_kurz ADD &2&4
        };
    };

    #LIST ausgaenge_kurz SIMPLIFY;

    #IF { &suchen_raeume[%*] > 1 } {
        #VAR suchen_raeume_alt $suchen_raeume;
    };

    #MAP LIST {roomexits} {$ausgaenge_kurz} {variable} {suchen_raeume};
    #LIST suchen_result ADD {{}};

    #FOREACH *suchen_raeume[%*] loop {
        #LIST suchen_result[-1] ADD $loop;
    };

    #IF { &suchen_result[%*] < 2 && &suchen_result[-1][%*] > 1 } {
        #RETURN
    };

    #FOREACH $suchen_result[-1][%*] loop {
        #MAP AT $loop #MAP GET ROOMEXITS suchen_exits;
        #VAR suchen_unmoeglich 0;
        #FOREACH $suchen_exits[%*] inner_loop {
            #LIST suchen_result[-2] FIND $inner_loop suchen_prev;
            #IF { $suchen_prev } {
                #VAR suchen_unmoeglich 0;
                #BREAK
            };
            #VAR suchen_unmoeglich 1
        };
        #IF { $suchen_unmoeglich == 1 } {
            #LIST suchen_result[-1] FIND $loop suchen_curr;
            #LIST suchen_result[-1] DEL $suchen_curr;
        }
    };

    #IF { &suchen_result[-1][%*] == 1 } {
        #ECHO {gefunden: $suchen_result[-1][1]};
        #MAP GOTO $suchen_result[-1][1]
    };
    #ELSE {
        #ECHO {Noch &suchen_result[-1][%*] moegliche Stellen.}
    }
}

#ACTION {^Schwingen, mit denen du dich als Regenbogenfalke vom Boden abstoesst...} {
    #ACTION {{^  \* (.+)}} {
        #SWITCH { "%%2" } {
            #CASE { "Nexus" } {
                #MAP GOTO 5491
            };
            #CASE { "Tijara" } {
                #MAP GOTO 5493
            };
            #CASE { "Midas" } {
                #MAP GOTO 5485
            };
            #CASE { "Arwenock" } {
                #MAP GOTO 5486
            };
            #CASE { "Derlim" } {
                #MAP GOTO 5487
            };
            #CASE { "Avir" } {
                #MAP GOTO 5492
            };
            #CASE { "Smoersky" } {
                #MAP GOTO 5494
            };
            #CASE { "Dhrkion" } {
                #MAP GOTO 5490
            };
            #CASE { "Knarkh" } {
                #MAP GOTO 5488
            };
            #CASE { "Arrakeen" } {
                #MAP GOTO 5489
            }
        }
    }
} {5.1}


#CLASS mapping CLOSE
