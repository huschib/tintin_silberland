#NOP { /**
 *  @file   config.tin
 *
 *  Datei wird beim Starten von tintin++ ausgefuehrt und setzt
 *  Grundeinstellungen fest.
 */}

#CONFIG {AUTO TAB}          {5000}
#CONFIG {BUFFER SIZE}       {100000}
#CONFIG {CHARSET}           {UTF-8}
#CONFIG {COMMAND COLOR}     {<038>}
#CONFIG {COMMAND ECHO}      {ON}
#CONFIG {CONNECT RETRY}     {15}
#CONFIG {COLOR PATCH}       {ON}
#CONFIG {HISTORY SIZE}      {1000}
#CONFIG {LOG}               {RAW}
#CONFIG {MOUSE TRACKING}    {ON}
#CONFIG {PACKET PATCH}      {0.5}
#CONFIG {REPEAT CHAR}       {!}
#CONFIG {REPEAT ENTER}      {ON}
#CONFIG {SCROLL LOCK}       {ON}
#CONFIG {SPEEDWALK}         {OFF}
#CONFIG {TINTIN CHAR}       {#}
#CONFIG {VERBATIM}          {OFF}
#CONFIG {VERBATIM CHAR}     {\}
#CONFIG {VERBOSE}           {OFF}
#CONFIG {WORDWRAP}          {ON}

#VAR screen
{
    {top}       {2}
    {bottom}    {-6}
    {left}      {60}
    {right}     {-60}
    {panels}    {3}
}

#ALIAS {set_screen}
{
    #SCREEN CLEAR ALL;
    #SCREEN SCROLLREGION $screen[top] $screen[left]+1 $screen[bottom]-1 $screen[right]-1;
    #SCREEN INPUTREGION -1 $screen[left]+1 -1 $screen[right]-1;
    draw_borders
}

#ALIAS {draw_borders}
{
    #DRAW LINE 1 1 1 -1;
    #IF {$screen[panels] == 1}
    {
        #DRAW LINE $screen[bottom] $screen[left] $screen[bottom] $screen[right];
        #DRAW LINE $screen[top]-1 $screen[left] $screen[top]-1 $screen[right]
    };
    #ELSEIF {$screen[panels] == 2}
    {
        #DRAW TOP TEED LINE 1 $screen[left] -1 $screen[left];
        #DRAW LEFT TEED LINE $screen[bottom] $screen[left] $screen[bottom] $screen[right]
    };
    #ELSE
    {
        #DRAW TOP TEED LINE 1 $screen[right] -1 $screen[right];
        #DRAW TOP TEED LINE 1 $screen[left] -1 $screen[left];
        #DRAW TEED LINE $screen[bottom] $screen[left] $screen[bottom] $screen[right]
    }
}

#EVENT {SCROLLED MOUSE WHEEL UP} {
    #NOP %0 row %1 col;
    #IF { %0 >= ($screen[top])
            && %0 <= ($screen[rows] + $screen[bottom])
            && %1 > ($screen[left])
            && %1 < ($screen[cols] + $screen[right] +2) } {
        #BUFFER UP 10;
    };
    #ELSEIF { %0 > ($screen[top])
            && %0 <= ($screen[rows] + $sidepanel[top])
            && %1 > ($screen[cols] + $screen[right])
            && $screen[panels] == 3 } {
        #NOP ;
        #IF { $chatbox_offset >= 0 } {
            #MATH chatbox_offset {$chatbox_offset + 2};
            chatbox_draw;
        };
    };
}
#EVENT {SCROLLED MOUSE WHEEL DOWN} {
    #IF { %0 >= ($screen[top])
            && %0 <= ($screen[rows] + $screen[bottom])
            && %1 > ($screen[left])
            && %1 < ($screen[cols] + $screen[right] +2) } {
        #BUFFER DOWN 10;
    };
    #ELSEIF { %0 > ($screen[top])
            && %0 <= ($screen[rows] + $sidepanel[top])
            && %1 > ($screen[cols] + $screen[right])
            && $screen[panels] == 3 } {
        #NOP ;
        #IF { $chatbox_offset > 0 } {
            #MATH chatbox_offset {$chatbox_offset - 2};
            chatbox_draw;
        };
    };
}

#ALIAS {session_change}
{
    #BUFFER END;
    #IF {$screen[panels] == 0}
    {
        #RETURN
    };
    set_screen;
    def_map_enter_room;
    draw_status;
    draw_leftpanel;
    sidepanel_show;
    chatbox_draw;
    #BUFFER END
}

#EVENT {SESSION ACTIVATED}
{
    session_change
}

#EVENT {SCREEN RESIZE}
{
    screen_dimensions;
    map_set_offset;
    session_change
}

#ALIAS {screen_dimensions}
{
    #SCREEN GET COLS screen[cols];
    #SCREEN GET ROWS screen[rows];

    #IF {$screen[rows] < 1}
    {
        #VAR screen[panels] 0;
        #RETURN
    };

    #IF {$screen[rows] > 63}
    {
        #VAR mapping[rows] 27
    };
    #ELSEIF {$screen[rows] > 57}
    {
        #VAR mapping[rows] 21
    };
    #ELSE
    {
        #VAR mapping[rows] 15
    };

    #IF {$screen[cols] < 140}
    {
        #VAR screen[panels] 1;
        #VAR screen[left] 1;
        #VAR screen[right] -1;
        #MATH mapping[rows] {$mapping[rows] - 6};
        #MATH screen[top] {$mapping[rows] + 2}
    };
    #ELSEIF {$screen[cols] < 200}
    {
        #VAR screen[panels] 2;
        #VAR screen[left] 60;
        #VAR screen[right] -1;
        #VAR screen[top] 2
    };
    #ELSE
    {
        #VAR screen[panels] 3;
        #VAR screen[left] 60;
        #VAR screen[right] -60;
        #VAR screen[top] 2
    }
}

#NOP /* Beim Laden ausfuehren ... */
screen_dimensions

#NOP { /**
 *	@brief	config-menu Struktur
 *  <name>_conf     Untermenue nicht sichtbar bis <name> aktiv ist
 *  <name>_not      Menuepunkt deaktiviert
 *  <name>_inp      erfordert Texteingabe nach Auswahl
 *
 *  Inhalt von 'value':
 *  ein Wort        Toggle an/aus der Variable in 'value'
 *  zwei Worte      Variable 'Wort 1' auf 'Wort 2' gesetzt
 *
 *  @todo   <name>_inp implementieren
 *  @todo   Waldlaeufer Pfad Mehrfachauswahl (Anzahl beschrÃ¤nken)
 */}

#VAR config_menu
{
    {gilde}
    {
        {abenteurer}    {gilde abenteurer}
        {barden}        {gilde barden}
        {berserker}     {gilde berserker}
        {druiden}       {gilde druiden}
        {nekromanten}   {gilde nekromanten}
        {paladine}      {gilde paladine}
        {waldlaeufer}   {gilde waldlaeufer}
        {zechpreller}   {gilde zechpreller}
        {abenteurer_conf}
        {
            {report}    {report}
        }
        {barden_conf}
        {
            {ueben}     {barden_ueben}
            {buffen}    {barden_buffen}
            {report}    {report}
            {richtung}
            {
                {alestra}   {barden_richtung alestra}
                {korriax}   {barden_richtung korriax}
                {sarrian}   {barden_richtung sarrian}
                {tirena}    {barden_richtung tirena}
            }
            {pfad}
            {
                {angara}    {barden_pfad angara}
                {arcon}     {barden_pfad arcon}
                {flammara}  {barden_pfad flammara}
                {fraggin}   {barden_pfad fraggin}
                {grimm}     {barden_pfad grimm}
                {khartak}   {barden_pfad khartak}
                {mira_not}      {barden_pfad mira}
                {nogi}      {barden_pfad nogi}
                {rynoxa}    {barden_pfad rynoxa}
                {schlain_not}   {barden_pfad schlain}
                {xulgsch}   {barden_pfad xulgsch}
                {zafira}    {barden_pfad zafira}
            }
        }
        {berserker_conf}
        {
            {report}    {report}
        }
        {druiden_conf}
        {
            {report}    {report}
        }
        {nekromanten_conf}
        {
            {report}    {report}
        }
        {paladine_conf}
        {
            {report}    {report}
        }
        {waldlaeufer_conf} {
            {report}    {report}
            {pfad_1}
            {
                {beschwoerer}   {waldlaeufer_pfad1 beschwoerer}
                {bogen}         {waldlaeufer_pfad1 bogen}
                {iama}          {waldlaeufer_pfad1 iama}
                {messer}        {waldlaeufer_pfad1 messer}
                {tiermeister}   {waldlaeufer_pfad1 tiermeister}
            }
            {pfad_2}
            {
                {beschwoerer}   {waldlaeufer_pfad2 beschwoerer}
                {bogen}         {waldlaeufer_pfad2 bogen}
                {iama}          {waldlaeufer_pfad2 iama}
                {messer}        {waldlaeufer_pfad2 messer}
                {tiermeister}   {waldlaeufer_pfad2 tiermeister}
            }
        }
        {zechpreller_conf}
        {
            {report}    {report}
        }
    }
    {gruppe}
    {
        {slgruppe}      {gruppe_slgruppe}
        {offen}         {gruppe_showinfo}
        {slgruppe_conf}
        {
            {name_inp}  {gruppe_name}
        }
    }
    {karte}
    {
        {ascii}        {karte ascii}
        {unicode}   {karte unicode}
    }
    {allgemein}
    {
        {kompakt}       {kampf_kompakt}
        {fingerhut}     {fingerhut}
        {ultihalsband}  {ultihalsband}
        {seher}         {seher}
    }
    {region}
    {
        {abgrund}
        {
            {befehle}   {abgrund_befehle}
            {ablegen}   {abgrund_ablegen}
        }
        {brunnen}
        {
            {befehle}   {brunnen_befehle}
            {ablegen}   {brunnen_ablegen}
        }
        {todesturm}
        {
            {befehle}   {todesturm_befehle}
            {ablegen}   {todesturm_ablegen}
        }
    }
}

#NOP { /**
 *	@brief	Config-Kommando
 *
 *  @todo   automatisches Ausfuehren von Aenderungen nach dem Setzen in Config
 *          per Event (z.B. Kartendesign) 
 */};

#ALIAS {config} {
    #VAR config_path {config_menu};
    #VAR config_setfunc {config_mainfunc};
    #VAR config_aktiv 1;
    #VAR config_header CONFIG;
    config_show {$config_menu};
    config_start
}

#ALIAS {config_start} {
    #EVENT {RECEIVED INPUT CHARACTER} {
        #CURSOR GET tmp_input;

        #IF { "$tmp_input" == "{@config_options_regex{}}" } {
            #IF { &current_menu[+@config_item_number{$tmp_input}][] > 0 } {
                #FORMAT config_path {%s[%s]}
                    {$config_path}
                    {*current_menu[+@config_item_number{$tmp_input}]};
                config_show {$current_menu[+@config_item_number{$tmp_input}]}
            };
            #ELSEIF { "*current_menu[+@config_item_number{$tmp_input}]" == "{.+_not}" } {
                #NOP
            };
            #ELSE {
                config_set $current_menu[+@config_item_number{$tmp_input}];
                config_show {$current_menu}
            };
            #CURSOR CLEAR
        };
        #ELSEIF { "$tmp_input" == "z" } {
            #REGEXP {$config_path} {{(.+)\[[^\]]+\]$}} {
                #VAR config_path {&2}
            };
            config_show {${$config_path}};
            #CURSOR CLEAR
        };
        #ELSEIF { "$tmp_input" == "q" } {
            #ECHO {Config beendet.};
            #CURSOR CLEAR;
            config_stop
        }
    }
}

#FUNCTION {config_options_regex} {
    #IF { &current_menu[] < 10 } {
        #FORMAT result {[1-%s]} {&current_menu[]}
    };
    #ELSEIF { &current_menu[] > 9 } {
        #FORMAT result {[1-9a-%s]} {@config_item_number{&current_menu[]}}
    };
    #RETURN $result
}

#ALIAS {config_stop} {
    #VAR config_aktiv 0;
    #UNEVENT {RECEIVED INPUT CHARACTER}
}

#ALIAS {config_show} {
    #IF { @_an_aus{config_aktiv} == 0 } {
        #RETURN;
    };
    #VAR current_menu %0;

    #ECHO {%s: %s} {$config_header} {@config_path{$config_path}};

    #FOREACH {*current_menu[]} {menu_item} {
        #IF { "$menu_item" == "{.+_conf}" } {
            #IF { &current_menu[$menu_item][] == 0 } {
                #UNVAR current_menu[$menu_item];
                #CONTINUE
            };
            #VAR tmp $menu_item;
            #REPLACE tmp {_conf} {};
            #VAR tmp2 $current_menu[$tmp];
            #IF { "$tmp2" == "{.+ .+}" } {
                #REPLACE tmp2 {{ .+$}} {};
                #IF { "$config[$tmp2]" != "$tmp" } {
                    #UNVAR current_menu[$menu_item];
                    #CONTINUE
                }
            };
            #ELSEIF { @check_config{$tmp2} == 0 } {
                #UNVAR current_menu[$menu_item];
                #CONTINUE
            }
        };
        #IF { "$menu_item" == "{.+_not}" } {
            #VAR menu_item_tmp $menu_item;
            #REPLACE menu_item_tmp {_not} {};
            #ECHO {<g08>(%s) %-20n %s<099>}
                {@config_item_number{&current_menu[$menu_item]}}
                {$menu_item_tmp}
                {inaktiv};
            #CONTINUE
        };
        #IF { &current_menu[$menu_item][] > 0 } {
            #ECHO {<F49B>(%s)<099> <099>%-20n<099> <F49B>%s<099>}
                {@config_item_number{&current_menu[$menu_item]}}
                {$menu_item}
                {>}
        };
        #ELSE {
            #ECHO {<F49B>(%s)<099> <099>%-20n<099> %s}
                {@config_item_number{&current_menu[$menu_item]}}
                {$menu_item}
                {@check_menu_value{$current_menu[$menu_item]}}
        }
    };
    #ECHO {};
    #ECHO {<F49B>(%s)<099> %+20s} {z} {Zurueck};
    #ECHO {<F49B>(%s)<099> %+20s} {q} {Beenden};
    #ECHO {}
}

#ALIAS {config_set} {
    ${config_setfunc} %0;
    #VAR current_menu ${$config_path};
    update_var;
}

#ALIAS {config_mainfunc} {
    #VAR args {%0};
    #REPLACE args { } {;};
    #LIST args CREATE {$args};
    #IF { &args[] == 1 } {
        toggle_var config[%1]
    };
    #ELSEIF { &args[] == 2 } {
        #VAR config[%1] %2
    };
} {5};

#FUNCTION {config_path} {
    #VAR result %0;
    #REPLACE result {{^[a-z_]+}} {};
    #REPLACE result {][} { -> };
    #REPLACE result {[} {};
    #REPLACE result {]} {};
    #RETURN $result
}

#FUNCTION {config_item_number} {
    #IF { %1 < 10 } {
        #VAR result %1
    };
    #ELSEIF { %1 > 9 } {
        #FORMAT tmp {%m} {%1 + 87};
        #FORMAT tmp {%X} {$tmp};
        #FORMAT result {%x} {$tmp}
    };
    #ELSEIF { "%1" == "{[a-z]}" } {
        #FORMAT tmp {%A} {%1};
        #FORMAT tmp {%m} {%1 - 87};
        #FORMAT tmp {%X} {$tmp};
        #FORMAT result {%x} {$tmp}
    };
    #RETURN $result
}

#FUNCTION {check_menu_value} {
    #REGEXP {%1} {{^([^ ]+) (.+)}} {
        #IF { "$config[&2]" == "&3" } {
            #VAR tmp 1
        };
        #ELSE {
            #VAR tmp 0
        };
        #VAR result tmp
    } {
        #VAR result config[%1]
    };
    #RETURN @an_aus{$result}
}

#FUNCTION {check_config} {
    #RETURN @_an_aus{config[%1]}
}

#ALIAS {gilden_report} {
    #IF {&{config[gilde]}} {
        #SEND {$gilden_report_cmd}
    }
}

#ALIAS {catch_load} {
    #EVENT {READ ERROR} {
        #ECHO {Es existiert keine Datei %1.}
    };
    #READ {%2};
    #UNEVENT {READ ERROR}
}
