#NOP { /**
 *  @file   statusbar.tin
 *  @brief  Alles was zu den Statuszeilen gehoert
 *
 *  @todo   Statuszeile modular erweiterbar machen
 *  @todo   Module koennen links oder rechtsbuendig sein
 *  @todo   Gilden brauchen dann nur bestimmte Module ergaenzen
 */}

#CLASS statusbar KILL
#CLASS statusbar OPEN

#ECHO {<029>-- <188>%s<288> geladen<099>} {common/statusbar.tin}

#LIST status_items CREATE {status_session;status_hp;status_mp;status_align;status_halsband}
#VAR status[halsband] <199>HB!<099>
#VAR scrolling {}
#VAR statusline_list {}

#EVENT {VARIABLE UPDATE status} {
    #IF { "${%2}" == "%1" } {
        #RETURN
    };
    #SWITCH { "*{%2}" } {
        #CASE { "hp" } {
            #VAR status_hp {@status_hmp{%1;$status[maxhp];lp}};
            #LIST status_items FIND status_hp tmp_status_index;
            #VAR statusline_list[$tmp_status_index] {$status_hp}
        };
        #CASE { "mp" } {
            #VAR status_mp {@status_hmp{%1;$status[maxmp];mp}};
            #LIST status_items FIND status_mp tmp_status_index;
            #VAR statusline_list[$tmp_status_index] {$status_mp}
        };
        #CASE { "session" } {
            #VAR status_session {@status_session{%1}};
            #LIST status_items FIND status_session tmp_status_index;
            #VAR statusline_list[$tmp_status_index] {$status_session}
        };
        #CASE { "halsband" } {
            #VAR status_halsband {@status_halsband{%1}};
            #LIST status_items FIND status_halsband tmp_status_index;
            #VAR statusline_list[$tmp_status_index] {$status_halsband}
        };
        #CASE { "align" } {
            #VAR status_align {@status_align{%1}};
            #LIST status_items FIND status_align tmp_status_index;
            #VAR statusline_list[$tmp_status_index] {$status_align}
        };
        #CASE { "alcohol" } {
            #VAR status_alcohol {@status_alcohol{%1}};
            #LIST status_items FIND status_alcohol tmp_status_index;
            #VAR statusline_list[$tmp_status_index] {$status_alcohol}
        };
        #DEFAULT {
            #RETURN
        }
    };
    draw_status
}

#NOP { /**
 *	@brief	Teddybaer Report
 */};
#ACTION {^Du hast jetzt %+1..d (%+1..d) Lebenspunkte und %+1..d (%+1..d) Magiepunkte.$} {
    #VAR status[lasthp] $status[hp];
    #VAR status[maxhp] %2;
    #VAR status[hp] %1;
    #VAR status[lastmp] $status[mp];
    #VAR status[maxmp] %4;
    #VAR status[mp] %3;

    #MATH {status[diffhp]} {$status[hp] - $status[lasthp]};
    #MATH {status[diffmp]} {$status[mp] - $status[lastmp]};
    #IF { $status[diffmp] > 0 } {
        shift_statusband <060>+$status[diffmp]<099>
    };
    #IF { $status[diffhp] > 0 } {
        shift_statusband <020>+$status[diffhp]<099>
    };
    #IF { $status[diffmp] < 0 } {
        shift_statusband <140>$status[diffmp]<099>
    };
    #IF { $status[diffhp] < 0 } {
        shift_statusband <010>$status[diffhp]<099>
    };
    #IF { $status[diffhp] != 0 || $status[diffmp] != 0 } {
        #NOP { /**
        *   @todo   Aufruf von scrolling nur über Funktion
        */};
        #NOP #SHOWME {$scrolling} {-4} {61}
    };

    #LINE GAG
}

#NOP { /**
 *  @brief  Trigger erfasst die Ausgabe des Fingerhuts.
 *          Text im Fingerhut: Fingerhut #lp# #lpmax# #mp# #mpmax# #align# #xp# #zustand#
 */};
#ACTION {^Fingerhut %!s%+1..d %!s%+1..d %!s%+1..d %!s%+1..d %+ %!?%+1..d %+$} {
    check_diff status[lasthp] {$status[hp]};
    check_diff status[maxhp] {%2};
    check_diff status[hp] {%1};
    #NOP #VAR status[diffhp] %3;
    check_diff status[lastmp] {$status[mp]};
    check_diff status[maxmp] {%4};
    check_diff status[mp] {%3};

    #FORMAT {align} {%p} {%5};
    #IF { "$status[align]" != "%5" } {
        #FORMAT {status[align]} {%p} {%5}
    };
    #CLASS ${mud}_vars ASSIGN {
        #VAR xp[previous] {$xp[current]};
    };
    #VAR xp[current] {%6};
    #IF { $xp[log] } {
        #IF { $xp[previous] > $xp[current] } {
            #IF { $jadering == 1 } {
                #VAR jadering {0};
                #ECHO {Der Jadering hat Dir %m XP abgezogen} {$xp[previous]-$xp[current]};
                #MATH {xp[lost]} {$xp[lost] - $xp[previous] + $xp[current]}
            };
            #ELSE {
                #MATH {xp[death]} {$xp[death] + $xp[previous] - $xp[current]};
                #MATH {xp[deaths]} {$xp[deaths] + 1}
            }
        };
        #MATH {xp[diff]} {$xp[current] - $xp[start] + $xp[death]}
    };

    #IF { $jadering == 1 } {
        #VAR jadering {0}
    };

    #IF { $check_diff == 1 } {
        #MATH {status[diffhp]} {$status[hp] - $status[lasthp]};
        #MATH {status[diffmp]} {$status[mp] - $status[lastmp]};
        #IF { $status[diffmp] > 0 } {
            shift_statusband <060>+$status[diffmp]<099>
        };
        #IF { $status[diffhp] > 0 } {
            shift_statusband <020>+$status[diffhp]<099>
        };
        #IF { $status[diffmp] < 0 } {
            shift_statusband <140>$status[diffmp]<099>
        };
        #IF { $status[diffhp] < 0 } {
            shift_statusband <010>$status[diffhp]<099>
        };
        #IF { $status[diffhp] != 0 || $status[diffmp] != 0 } {
            #NOP { /**
            *   @todo   Aufruf von scrolling nur über Funktion
            */};
            #LINE IGNORE #SHOWME {$scrolling} {-4} {61}
        };
    };

    #VAR check_diff {0};
    #LINE GAG
}

#NOP { /**
 *	@brief	Ausgabe der Statuszeilen
 */};
#ALIAS {draw_status} {
    #LIST statusline COPY statusline_list;
    #LIST statusline COLLAPSE {};

    #VAR aktive_session {@ats{$info[SESSION][NAME]}};
    #IF { {$aktive_session} != {$info[SESSION][NAME]} } {
        #ats {
            #VAR partner_status {@$info[SESSION][NAME]{$statusline}}
        }
    };

    #ECHO {{%-78s} {-2} {$screen[left]+1}} {$statusline};

    #IF { &{gruppe[aktiv]} } {
        #LINE IGNORE #SHOWME {$partner_status} {-3} {$screen[left]+1}
    };
    #LINE IGNORE #SHOWME {$scrolling} {-4} {$screen[left]+1};
    #LINE IGNORE #SHOWME {$statusinfo} {-5} {$screen[left]+1}
}

#NOP { /**
 *	@brief	Scrollzeile für LP/MP-Änderungen
 *
 */};
#ALIAS {shift_statusband} {
    #IF { &{scrolling} } {
        #FORMAT scrolling {%.80s<099>} {%1 $scrolling};
    };
    #ELSE {
        #VAR scrolling %1;
    };
}

#NOP { /**
 *  @brief  Stausfeld für HP/MP erstellen
 *
 *  @param  aktueller Wert
 *  @param  maximaler Wert formatierter String
 *  @param  String für Beschreibung
 */};
#FUNCTION {status_hmp} {
    #VAR colhp @calccolor{%1;%2};
    #FORMAT {result} {%s%+3s%s|} {$colhp} {%1} {<099>%3}
}

#FUNCTION {status_hp}
{
    #RETURN {@status_hmp{$status[hp];$status[maxhp];lp}}
};

#FUNCTION {status_mp}
{
    #RETURN {@status_hmp{$status[mp];$status[maxmp];mp}}
};

#NOP { /**
 *  @brief Farbe nach Relation aktueller Wert zu maximalem Wert
 *
 *  @param  aktueller Wert
 *  @param  maximaler Wert
 *  @return String mit Farbcode
 */};
#FUNCTION {calccolor} {
    #MATH {tmp} {%1 * 100 / %2};
    #IF { $tmp >= 99 } {#VAR result <128>};
    #ELSEIF { $tmp > 80 } {#VAR result <028>};
    #ELSEIF { $tmp > 60 } {#VAR result <afc>};
    #ELSEIF { $tmp > 40 } {#VAR result <acf>};
    #ELSEIF { $tmp > 20 } {#VAR result <fca>};
    #ELSE {#VAR result <faa>}
}

#NOP { /**
 *	@brief	Statusfeld für Gesinnung erstellen
 *
 *  @param  Gesinnungstext
 *  @return Kurzanzeige aus drei Zeichen
 *          + gut, - böse, * neutral
 */};
#FUNCTION {status_align} {
    #SWITCH {"%0"} {
        #CASE { "erleuchtet" } {
            #VAR shortalign {<138>+++<099>}
        };
        #CASE { "{heilig|Heilig}" } {
            #VAR shortalign {<038>+++<099>}
        };
        #CASE { "{sehr gut|Fast Heilig}" } {
            #VAR shortalign { <038>++<099>}
        };
        #CASE { "{zu gut|Sehr gut}" } {
            #VAR shortalign {<038>-++<099>}
        };
        #CASE { "{gut|Gut}" } {
            #VAR shortalign {<038>-++<099>}
        };
        #CASE { "{lieb|Hilfsbereit}" } {
            #VAR shortalign {  <038>+<099>}
        };
        #CASE { "{nett|Freundlich}" } {
            #VAR shortalign { *+}
        };
        #CASE { "{neutral|Neutral}" } {
            #VAR shortalign { * }
        };
        #CASE { "{frech|Durchtrieben}" } {
            #VAR shortalign {-* }
        };
        #CASE { "{gemein|Boese}" } {
            #VAR shortalign {<018>-<099>  }
        };
        #CASE { "{boese|Verdorben}" } {
            #VAR shortalign {<018>--+<099>}
        };
        #CASE { "{sehr boese|Extrem Boese}" } {
            #VAR shortalign {<018>--<099> }
        };
        #CASE { "{satanisch|Satanisch}" } {
            #VAR shortalign {<018>---<099>}
        };
        #CASE { "{diabolisch|Teuflisch}" } {
            #VAR shortalign {<118>---<099>}
        };
        #DEFAULT {
            #VAR shortalign { . }
        };
    };
    #FORMAT {result} {%-3s|} {$shortalign};
}

#NOP { /**
 *	@brief	Statusfeld für Halsbandzeit erstellen
 */};
#FUNCTION {status_halsband} {
    #FORMAT {result} {%+3s|} {%0}
}

#NOP { /**
 *	@brief	Statusfeld für Sessionname erstellen
 */};
#FUNCTION {status_session} {
    #INFO SESSION SAVE;
    #FORMAT {result} {%u|} {$info[SESSION][NAME]}
}

#NOP { /**
 *	@brief	Statusvariablen beim Start setzen
 */};
#ALIAS {update_status} {
    #VAR status_hp          {@status_hmp{$status[hp];$status[maxhp];lp}};
    #VAR status_mp          {@status_hmp{$status[mp];$status[maxmp];mp}};
    #VAR status_session     {@status_session{$status[session]}};
    #VAR status_halsband    {@status_halsband{$status[halsband]}};
    #VAR status_align       {@status_align{$status[align]}};
    #VAR status_alcohol     {@status_alcohol{$status[alcohol]}};
    #FOREACH {$status_items[]} {loop} {
        #LIST status_items FIND $loop tmp_status_index;
        #VAR statusline_list[$tmp_status_index] {${$loop}}
    };
    draw_status
}

#NOP { /**
 *  @brief  Infos aus Befehl 'hoinfo' der Hobbits auslesen
 */};
#ALIAS {hop} {
    #VAR status[vorsicht] {0};
    #VAR status[flucht] {};
    #ACTION {^%*$} {
        #LINE GAG
    } {6};
    #LINE ONESHOT {
        #ACTION {{Du bist (\D+?) (und|aber) (\D+?)\.}} {
            #VAR status[hunger] {%%2};
            #VAR status[durst] {%%4};
            #LINE GAG
        };
        #ACTION {{(\d+) Muenzen}} {
            #VAR status[geld] {%%2};
            #LINE GAG
        };
        #ACTION {{Unterschied:\s+(\d+)}} {
            #VAR status[xpdiff] {%%2};
            #LINE GAG
        };
        #ACTION {{Kraft:\s+[^\]]+\]\s+(.+?)\s*$}} {
            #VAR status[last] {%%2};
            #LINE GAG
        };
        #ACTION {{\| Vorsicht:\s+(\d+) Ri: (.+?)\s+\|}} {
            #VAR status[vorsicht] {%%2};
            #VAR status[flucht] {%%4};
            #LINE GAG
        };
        #ACTION {{\| Vorsicht:\s+(\d+)\s+\|}} {
            #VAR status[vorsicht] {%%2};
            #LINE GAG
        };
    };
    #DELAY {0.2} {
        #VAR statusinfo {@hoinfo_zeile{}};
        #UNACTION {{\| Vorsicht:\s+(\d+) Ri: (.+?)\s+\|}};
        #UNACTION {{\| Vorsicht:\s+(\d+)\s+\|}};
        #UNACTION {^%*$};
        #DELAY {0.01} {
            draw_status
        }
    };
    #SEND {hoinfo}
}

#NOP { /**
 *	@brief	ausgelesene Infos aus Rassen-Info in eine Zeile packen
 */};
#FUNCTION {hoinfo_zeile} {
    #FORMAT {result}
        {XP: %s Hu: %s Du: %s Mu: %s La: %s Vo: %s Ri: %s}
        {$status[xpdiff]} {@foodpercent{$status[hunger]}%%} {@foodpercent{$status[durst]}%%} {$status[geld]}
        {@loadpercent{$status[last]}%%} {$status[vorsicht]} {$status[flucht]};
    #RETURN {$result}
}

#NOP { /**
 *	@brief	Infos aus Befehl 'niminfo' der Dunkelelfen auslesen
 */};
#ALIAS {nip} {
    #ACTION {^ +{-+}$} {
        #LINE GAG;
        #ACTION {^{.*}$} {
            #LINE GAG;
            #REGEXP {%%%0} {{Ri: (.+) +\|}} {
                #VAR {flucht} {&2}
            };
            #REGEXP {%%%0} {{([0-9]+) Muenzen}} {
                #VAR {geld} {&2}
            };
            #REGEXP {%%%0} {{Unterschied: +(-?[0-9]+)}} {
                #VAR {xp_diff} {&2}
            };
            #REGEXP {%%%0} {{Vo: ([0-9]+)}} {
                #VAR {vorsicht} {&2}
            };
            #REGEXP {%%%0} {{^   Abenteuer: [^\]]+\] +([A-Za-z].+[a-z\!]).+$}} {
                #VAR {belastung} {&2}
            };
            #ACTION {^ +{-+ +-+}+$} {
                #FORMAT {niminfo}
                    {XP: %s Mu: %s La: %s Vo: %s Ri: %s}
                    {$xp_diff} {$geld} {@loadpercent{$belastung}%%} {$vorsicht}
                    {$flucht};
                #UNACTION {^{.*}$};
                #LINE GAG;
                #UNACTION {^ +{-+ +-+}+$}
            } {1}
        } {9};
        #UNACTION {^ +{-+}$};
        #DELAY {0.1} {
            #VAR statusinfo {$niminfo};
            draw_status
        };
        #VAR xp_diff {0};
        #VAR vorsicht {0};
        #VAR flucht {}
    } {5};
    #SEND {niminfo};
}

#NOP { /**
 *	@brief	Beladungstext in Prozentzahl umwandeln
 */};
#FUNCTION {loadpercent} {
    #SWITCH { "%1" } {
        #CASE { "UFFF!! beladen!" } {
            #RETURN {100}
        };
        #CASE { "extrem beladen!" } {
            #RETURN {90}
        };
        #CASE { "sehr beladen" } {
            #RETURN {80}
        };
        #CASE { "schwer beladen" } {
            #RETURN {70}
        };
        #CASE { "ziemlich beladen" } {
            #RETURN {60}
        };
        #CASE { "etwas beladen" } {
            #RETURN {50}
        };
        #DEFAULT {
            #RETURN {0}
        }
    }
}

#NOP { /**
 *	@brief	Saettigungstexte in Prozentzahl umwandeln
 */};
#FUNCTION {foodpercent} {
    #SWITCH { "%1" } {
        #CASE { "extrem {hungrig|durstig}" } {
            #RETURN {100}
        };
        #CASE { "ausgesprochen {hungrig|durstig}" } {
            #RETURN {90}
        };
        #CASE { "ziemlich {hungrig|durstig}" } {
            #RETURN {80}
        };
        #CASE { "sehr {hungrig|durstig}" } {
            #RETURN {70}
        };
        #CASE { "{hungrig|durstig}" } {
            #RETURN {60}
        };
        #CASE { "noch {hungrig|durstig}" } {
            #RETURN {50}
        };
        #CASE { "kaum {hungrig|durstig}" } {
            #RETURN {40}
        };
        #CASE { "beinahe gesaettigt" } {
            #RETURN {30}
        };
        #CASE { "fast nicht durstig" } {
            #RETURN {30}
        };
        #CASE { "gesaettigt" } {
            #RETURN {20}
        };
        #CASE { "ueberhaupt nicht durstig" } {
            #RETURN {20}
        };
        #CASE { "voll angegessen" } {
            #RETURN {10}
        };
        #CASE { "voll angetrunken" } {
            #RETURN {10}
        };
        #DEFAULT {
            #RETURN {0}
        }
    }
}

#CLASS statusbar CLOSE
